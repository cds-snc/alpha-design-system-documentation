{"version":3,"file":"gcds-select.e2e.js","sourceRoot":"","sources":["../../../../src/components/gcds-select/test/gcds-select.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAExD,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;EAC3B,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;IACvB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CACnB,yDAAyD,CAC1D,CAAC;IAEF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/C,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;EAC1C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH;;;GAGG;AAEH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;EACtC;;KAEG;EACH,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;IAC5B,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAEhC,MAAM,IAAI,CAAC,UAAU,CACnB,uFAAuF,CACxF,CAAC;IACF,MAAM,OAAO,GAAG,MAAM,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC5D,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC/D,CAAC,CAAC,CAAC;EAEH;;KAEG;EACH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;IAC/B,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;;;KAMrB,CAAC,CAAC;IAEH,MAAM,iBAAiB,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC;OAC7C,SAAS,CAAC,gBAAgB,CAAC;OAC3B,OAAO,EAAE,CAAC;IACb,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC;IAExC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC,CAAC;EAEH;;KAEG;EACH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;IACrC,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;KAErB,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,SAAS,CAAC;IAE5E,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAEjC,MAAM,CACJ,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CACrE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC;EAEH;;KAEG;EACH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;IACrC,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAEhC,MAAM,IAAI,CAAC,UAAU,CACnB,0DAA0D,CAC3D,CAAC;IACF,MAAM,OAAO,GAAG,MAAM,MAAM,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IAChE,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;EACzE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nconst { AxePuppeteer } = require('@axe-core/puppeteer');\n\ndescribe('gcds-select', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      '<gcds-select label=\"select label\" select-id=\"select\" />',\n    );\n\n    const element = await page.find('gcds-select');\n    expect(element).toHaveClass('hydrated');\n  });\n});\n\n/**\n * Accessibility tests\n * Axe-core rules: https://github.com/dequelabs/axe-core/blob/develop/doc/rule-descriptions.md#wcag-21-level-a--aa-rules\n */\n\ndescribe('gcds-select a11y tests', () => {\n  /**\n   * Aria-invalid true if error test\n   */\n  it('aria-invalid', async () => {\n    const page = await newE2EPage();\n\n    await page.setContent(\n      '<gcds-select label=\"Label\" select-id=\"aria-invalid\" error-message=\"Field required\" />',\n    );\n    const element = await await page.find('gcds-select select');\n    expect(element.getAttribute('aria-invalid')).toEqual('true');\n  });\n\n  /**\n   * Colour contrast test\n   */\n  it('colour contrast', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-select label=\"Label\" select-id=\"colour-contrast\">\n        <option>This is option 1</option>\n        <option>This is option 2</option>\n        <option>This is option 3</option>\n      </gcds-select>\n    `);\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('color-contrast')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  /**\n   * Select keyboard focus\n   */\n  it('select keyboard focus', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-select label=\"Label\" select-id=\"keyboard-focus\" />\n    `);\n\n    const selectField = await (await page.find('gcds-select select')).innerText;\n\n    await page.keyboard.press('Tab');\n\n    expect(\n      await page.evaluate(() => window.document.activeElement.textContent),\n    ).toEqual(selectField);\n  });\n\n  /**\n   * select label test\n   */\n  it('select contains label', async () => {\n    const page = await newE2EPage();\n\n    await page.setContent(\n      '<gcds-select label=\"Label\" select-id=\"contains-label\" />',\n    );\n    const element = await await page.find('gcds-select gcds-label');\n    expect(element.getAttribute('id')).toEqual('label-for-contains-label');\n  });\n});\n"]}