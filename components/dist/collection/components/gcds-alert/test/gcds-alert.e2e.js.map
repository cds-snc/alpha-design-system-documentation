{"version":3,"file":"gcds-alert.e2e.js","sourceRoot":"","sources":["../../../../src/components/gcds-alert/test/gcds-alert.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAExD,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;EAC1B,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;IACvB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;IAEnD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9C,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;EAC1C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH;;;GAGG;AAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;EACrC;;KAEG;EACH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;IAC5C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;KAIrB,CAAC,CAAC;IAEH,MAAM,iBAAiB,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC;OAC7C,SAAS,CAAC,gBAAgB,CAAC;OAC3B,OAAO,EAAE,CAAC;IACb,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC;IAExC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;IAC1C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;KAIrB,CAAC,CAAC;IAEH,MAAM,iBAAiB,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC;OAC7C,SAAS,CAAC,gBAAgB,CAAC;OAC3B,OAAO,EAAE,CAAC;IACb,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC;IAExC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;IAC7C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;KAIrB,CAAC,CAAC;IAEH,MAAM,iBAAiB,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC;OAC7C,SAAS,CAAC,gBAAgB,CAAC;OAC3B,OAAO,EAAE,CAAC;IACb,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC;IAExC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;IAC7C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;;KAIrB,CAAC,CAAC;IAEH,MAAM,iBAAiB,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC;OAC7C,SAAS,CAAC,gBAAgB,CAAC;OAC3B,OAAO,EAAE,CAAC;IACb,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC;IAExC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nconst { AxePuppeteer } = require('@axe-core/puppeteer');\n\ndescribe('gcds-alert', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<gcds-alert></gcds-alert>');\n\n    const element = await page.find('gcds-alert');\n    expect(element).toHaveClass('hydrated');\n  });\n});\n\n/**\n * Accessibility tests\n * Axe-core rules: https://github.com/dequelabs/axe-core/blob/develop/doc/rule-descriptions.md#wcag-21-level-a--aa-rules\n */\n\ndescribe('gcds-alert a11y tests', () => {\n  /**\n   * Colour contrast test\n   */\n  it('colour contrast danger alert', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-alert heading=\"Main notification title\" alert-role=\"danger\">\n        <p>Testing slot content.</p>\n      </gcds-alert>\n    `);\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('color-contrast')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  it('colour contrast info alert', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-alert heading=\"Main notification title\" alert-role=\"info\">\n        <p>Testing slot content.</p>\n      </gcds-alert>\n    `);\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('color-contrast')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  it('colour contrast success alert', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-alert heading=\"Main notification title\" alert-role=\"success\">\n        <p>Testing slot content.</p>\n      </gcds-alert>\n    `);\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('color-contrast')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  it('colour contrast warning alert', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-alert heading=\"Main notification title\" alert-role=\"warning\">\n        <p>Testing slot content.</p>\n      </gcds-alert>\n    `);\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('color-contrast')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n});\n"]}