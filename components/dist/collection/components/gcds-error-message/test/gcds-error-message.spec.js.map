{"version":3,"file":"gcds-error-message.spec.js","sourceRoot":"","sources":["../../../../src/components/gcds-error-message/test/gcds-error-message.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,WAAW,CAAC;YACjC,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC9B,IAAI,EAAE,4FAA4F;SACnG,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KASxB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GcdsErrorMessage } from '../gcds-error-message';\n\ndescribe('gcds-error-message', () => {\n  it('renders', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsErrorMessage],\n      html: '<gcds-error-message message-id=\"input-renders\">This field is required</gcds-error-message>',\n    });\n    expect(root).toEqualHtml(`\n      <gcds-error-message message-id=\"input-renders\" id=\"error-message-input-renders\" class=\"gcds-error-message-wrapper\">\n        <mock:shadow-root>\n          <gcds-text class=\"error-message\" role=\"alert\" margin-bottom=\"0\">\n            <slot></slot>\n          </gcds-text>\n        </mock:shadow-root>\n        This field is required\n      </gcds-error-message>\n    `);\n  });\n});\n"]}