{"version":3,"file":"gcds-side-nav.js","sourceRoot":"","sources":["../../../src/components/gcds-side-nav/gcds-side-nav.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  State,\n  Listen,\n  Method,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport { handleKeyDownNav, getNavItems } from '../../utils/menus/utils';\nimport I18N from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-side-nav',\n  styleUrl: 'gcds-side-nav.css',\n  shadow: true,\n})\nexport class GcdsSideNav {\n  @Element() el: HTMLElement;\n\n  private mobile?: HTMLGcdsNavGroupElement;\n\n  /**\n   * Label for navigation landmark\n   */\n  @Prop() label!: string;\n\n  /**\n   * Sticky navigation flag\n   */\n  // @Prop() position: 'static' | 'sticky' = 'static';\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Queue of nav items for keyboard navigation\n   */\n  @State() navItems = [];\n\n  /**\n   * Current size based on window size\n   */\n  @State() navSize: 'desktop' | 'mobile';\n\n  @Listen('focusout', { target: 'document' })\n  async focusOutListener(e) {\n    if (!this.el.contains(e.relatedTarget)) {\n      if (this.navSize == 'mobile') {\n        if (this.mobile.hasAttribute('open')) {\n          await this.mobile.toggleNav();\n        }\n      }\n    }\n  }\n\n  @Listen('keydown', { target: 'document' })\n  async keyDownListener(e) {\n    if (this.el.contains(document.activeElement)) {\n      handleKeyDownNav(e, this.el, this.navItems);\n    }\n  }\n\n  @Listen('gcdsClick', { target: 'document' })\n  async gcdsClickListener(e) {\n    if (this.el.contains(e.target)) {\n      // Update tab queue when clicking mobile menu\n      if (e.target == this.el && this.navSize == 'mobile') {\n        await this.updateNavItemQueue(e.target);\n\n        // Update tab queue when clicking dropdown\n      } else if (\n        e.target.nodeName == 'GCDS-NAV-GROUP' &&\n        !e.target.hasAttribute('open')\n      ) {\n        await this.updateNavItemQueue(this.el);\n      }\n    }\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  /*\n   * Get current navSize state\n   */\n  @Method()\n  async getNavSize() {\n    return this.navSize;\n  }\n\n  /*\n   * Pass new window size: desktop or mobile\n   */\n  @Method()\n  async updateNavSize(size) {\n    this.navSize = size;\n  }\n\n  /*\n   * Update item queue for keyboard navigation based on passed element\n   */\n  @Method()\n  async updateNavItemQueue(el, includeElement?: boolean) {\n    if (includeElement) {\n      const childElements = await getNavItems(el);\n      this.navItems = [el, ...childElements];\n    } else {\n      this.navItems = await getNavItems(el);\n    }\n\n    if (this.navSize == 'mobile') {\n      this.navItems = [...this.navItems, this.mobile];\n    }\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    const mediaQuery = window.matchMedia('screen and (min-width: 64em)');\n\n    if (mediaQuery.matches) {\n      this.navSize = 'desktop';\n    } else {\n      this.navSize = 'mobile';\n    }\n  }\n\n  async componentDidLoad() {\n    const mediaQuery = window.matchMedia('screen and (min-width: 64em)');\n    const nav = this.el as HTMLGcdsSideNavElement;\n    const mobileTrigger = this.mobile;\n\n    await this.updateNavItemQueue(this.el);\n\n    mediaQuery.addEventListener('change', async function (e) {\n      if (e.matches) {\n        nav.updateNavSize('desktop');\n        await nav.updateNavItemQueue(nav);\n\n        if (mobileTrigger.hasAttribute('open')) {\n          mobileTrigger.toggleNav();\n        }\n      } else {\n        nav.updateNavSize('mobile');\n        await nav.updateNavItemQueue(nav);\n      }\n    });\n  }\n\n  render() {\n    const { label, lang } = this;\n\n    return (\n      <Host>\n        <nav aria-label={`${label}${I18N[lang].navLabel}`}>\n          <h2 class=\"gcds-side-nav__heading\">{label}</h2>\n          <gcds-nav-group\n            menuLabel=\"Menu\"\n            closeTrigger={lang == 'fr' ? 'Fermer' : 'Close'}\n            openTrigger=\"Menu\"\n            class=\"gcds-mobile-nav\"\n            role=\"menu\"\n            ref={element => (this.mobile = element as HTMLGcdsNavGroupElement)}\n            lang={lang}\n          >\n            <slot></slot>\n          </gcds-nav-group>\n        </nav>\n      </Host>\n    );\n  }\n}\n"]}