{"version":3,"file":"gcds-nav-group.js","sourceRoot":"","sources":["../../../src/components/gcds-nav-group/gcds-nav-group.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  State,\n  Method,\n  Event,\n  EventEmitter,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\n\n@Component({\n  tag: 'gcds-nav-group',\n  styleUrl: 'gcds-nav-group.css',\n  shadow: true,\n})\nexport class GcdsNavGroup {\n  @Element() el: HTMLElement;\n\n  private triggerElement?: HTMLElement;\n\n  /**\n   *  Label for the expanded button trigger\n   */\n  @Prop({ reflect: true }) closeTrigger?: string;\n\n  /**\n   * Label for the nav group menu\n   */\n  @Prop({ reflect: true }) menuLabel!: string;\n\n  /**\n   *  Label for the collapsed button trigger\n   */\n  @Prop({ reflect: true }) openTrigger!: string;\n\n  /**\n   * Has the nav group been expanded\n   */\n  @Prop({ reflect: true, mutable: true }) open: boolean = false;\n\n  /**\n   * Emitted when the button has focus.\n   */\n  @Event() gcdsClick!: EventEmitter<void>;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Style of nav to render based on parent\n   */\n  @State() navStyle: string;\n\n  /**\n   * Focus button element\n   */\n  @Method()\n  async focusTrigger() {\n    this.triggerElement.focus();\n  }\n\n  /**\n   * Toggle the nav open or closed\n   */\n  @Method()\n  async toggleNav() {\n    this.open = !this.open;\n\n    // Close any child nav-groups\n    for (let i = 0; i < this.el.children.length; i++) {\n      if (\n        this.el.children[i].nodeName == 'GCDS-NAV-GROUP' &&\n        this.el.children[i].hasAttribute('open')\n      ) {\n        (this.el.children[i] as HTMLGcdsNavGroupElement).toggleNav();\n      }\n    }\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    if (this.el.parentNode.nodeName == 'GCDS-TOP-NAV') {\n      this.navStyle = 'dropdown';\n\n      if (this.open) {\n        this.open = false;\n      }\n    } else {\n      this.navStyle = 'expandable';\n    }\n\n    if (\n      this.el.parentNode.nodeName == 'GCDS-NAV-GROUP' &&\n      !(this.el.parentNode as HTMLElement).classList.contains(\n        'gcds-mobile-nav',\n      ) &&\n      this.el.closest('gcds-top-nav')\n    ) {\n      this.el.remove();\n    }\n  }\n\n  render() {\n    const { closeTrigger, menuLabel, open, openTrigger } = this;\n\n    const roleAttr = {\n      role: 'menuitem',\n    };\n\n    if (this.el.classList.contains('gcds-mobile-nav')) {\n      delete roleAttr['role'];\n    }\n\n    return (\n      <Host\n        role=\"presentation\"\n        open={open}\n        class={open && 'gcds-nav-group-expanded'}\n      >\n        <button\n          aria-haspopup=\"true\"\n          aria-expanded={open.toString()}\n          {...roleAttr}\n          ref={element => (this.triggerElement = element as HTMLElement)}\n          class={`gcds-nav-group__trigger gcds-trigger--${this.navStyle}`}\n          onClick={() => {\n            this.toggleNav();\n            this.gcdsClick.emit();\n          }}\n        >\n          <gcds-icon name={open ? 'angle-up' : 'angle-down'}></gcds-icon>\n          {closeTrigger && open ? closeTrigger : openTrigger}\n        </button>\n        <ul\n          role=\"menu\"\n          aria-label={menuLabel}\n          class={`gcds-nav-group__list gcds-nav--${this.navStyle}`}\n        >\n          <slot></slot>\n        </ul>\n      </Host>\n    );\n  }\n}\n"]}