{"version":3,"file":"gcds-error-summary.spec.js","sourceRoot":"","sources":["../../../../src/components/gcds-error-summary/test/gcds-error-summary.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;EAClC,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;IAC5B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;MAC9B,IAAI,EAAE,2CAA2C;KAClD,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;IAC5B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;MAC9B,IAAI,EAAE,2CAA2C;KAClD,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;IACxC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;MAC9B,IAAI,EAAE,uEAAuE;KAC9E,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;IACrC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;MAC9B,IAAI,EAAE;;6BAEiB;KACxB,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;KAsB7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,EAAE,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;IAChC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;MAC9B,IAAI,EAAE,kDAAkD;KACzD,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GcdsErrorSummary } from '../gcds-error-summary';\n\ndescribe('gcds-error-summary', () => {\n  it('renders - en', async () => {\n    const page = await newSpecPage({\n      components: [GcdsErrorSummary],\n      html: `<gcds-error-summary></gcds-error-summary>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-error-summary>\n        <mock:shadow-root>\n          <div class=\"gcds-error-summary\" role=\"alert\" tabindex=\"-1\">\n            <h2 class=\"summary__heading\">\n              There was a problem\n            </h2>\n            <ol class=\"summary__errorlist\"></ol>\n          </div>\n        </mock:shadow-root>\n      </gcds-error-summary>\n    `);\n  });\n  it('renders - fr', async () => {\n    const page = await newSpecPage({\n      components: [GcdsErrorSummary],\n      html: `<gcds-error-summary></gcds-error-summary>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-error-summary>\n        <mock:shadow-root>\n          <div class=\"gcds-error-summary\" role=\"alert\" tabindex=\"-1\">\n            <h2 class=\"summary__heading\">\n              There was a problem\n            </h2>\n            <ol class=\"summary__errorlist\"></ol>\n          </div>\n        </mock:shadow-root>\n      </gcds-error-summary>\n    `);\n  });\n  it('renders - custom heading', async () => {\n    const page = await newSpecPage({\n      components: [GcdsErrorSummary],\n      html: `<gcds-error-summary heading=\"This is a heading\"></gcds-error-summary>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-error-summary heading=\"This is a heading\">\n        <mock:shadow-root>\n          <div class=\"gcds-error-summary\" role=\"alert\" tabindex=\"-1\">\n            <h2 class=\"summary__heading\">\n              This is a heading\n            </h2>\n            <ol class=\"summary__errorlist\"></ol>\n          </div>\n        </mock:shadow-root>\n      </gcds-error-summary>\n    `);\n  });\n  it('renders - error-links', async () => {\n    const page = await newSpecPage({\n      components: [GcdsErrorSummary],\n      html: `<gcds-error-summary\n        error-links='{\"#link1\":\"This is the first error\",\"#link2\":\"This is the second error\"}'\n      ></gcds-error-summary>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-error-summary error-links='{\"#link1\":\"This is the first error\",\"#link2\":\"This is the second error\"}'>\n        <mock:shadow-root>\n          <div class=\"gcds-error-summary gcds-show\" role=\"alert\" tabindex=\"-1\">\n            <h2 class=\"summary__heading\">\n              There was a problem\n            </h2>\n            <ol class=\"summary__errorlist\">\n              <li class=\"summary__listitem\">\n                <a class=\"summary__link\" href=\"#link1\">\n                  This is the first error\n                </a>\n              </li>\n              <li class=\"summary__listitem\">\n                <a class=\"summary__link\" href=\"#link2\">\n                  This is the second error\n                </a>\n              </li>\n            </ol>\n          </div>\n        </mock:shadow-root>\n      </gcds-error-summary>\n    `);\n  });\n  it('renders - listen', async () => {\n    const page = await newSpecPage({\n      components: [GcdsErrorSummary],\n      html: `<gcds-error-summary listen></gcds-error-summary>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-error-summary listen>\n        <mock:shadow-root>\n          <div class=\"gcds-error-summary\" role=\"alert\" tabindex=\"-1\">\n            <h2 class=\"summary__heading\">\n              There was a problem\n            </h2>\n            <ol class=\"summary__errorlist\"></ol>\n          </div>\n        </mock:shadow-root>\n      </gcds-error-summary>\n    `);\n  });\n});\n"]}