{"version":3,"file":"gcds-signature.spec.js","sourceRoot":"","sources":["../../../../src/components/gcds-signature/test/gcds-signature.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE,CAAC,sBAAsB,CAAC,CAAC;AACpE,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE,CAAC,wBAAwB,CAAC,CAAC;AACtE,IAAI,CAAC,IAAI,CACP,2BAA2B,EAC3B,GAAG,EAAE,CAAC,oCAAoC,CAC3C,CAAC;AACF,IAAI,CAAC,IAAI,CACP,2BAA2B,EAC3B,GAAG,EAAE,CAAC,mCAAmC,CAC1C,CAAC;AAEF,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,8DAA8D;SACrE,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,8EAA8E;SACrF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,8DAA8D;SACrE,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,8EAA8E;SACrF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,6DAA6D;SACpE,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,6DAA6D;SACpE,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\n\njest.mock('../assets/sig-blk-en.svg', () => 'Government of Canada');\njest.mock('../assets/sig-blk-fr.svg', () => 'Gouvernement du Canada');\njest.mock(\n  '../assets/wmms-spl-en.svg',\n  () => 'Symbol of the Government of Canada',\n);\njest.mock(\n  '../assets/wmms-spl-fr.svg',\n  () => 'Symbole du Gouvernement du Canada',\n);\n\nimport { GcdsSignature } from '../gcds-signature';\n\ndescribe('gcds-signature', () => {\n  it('renders: Signature - English - no link', async () => {\n    const page = await newSpecPage({\n      components: [GcdsSignature],\n      html: `<gcds-signature type=\"signature\" lang=\"en\"></gcds-signature>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-signature lang=\"en\" type=\"signature\" variant=\"colour\">\n        <div class=\"gcds-signature\">\n          Government of Canada\n        </div>\n      </gcds-signature>\n    `);\n  });\n  it('renders: Signature - English - has link', async () => {\n    const page = await newSpecPage({\n      components: [GcdsSignature],\n      html: `<gcds-signature type=\"signature\" lang=\"en\" has-link=\"true\"></gcds-signature>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-signature lang=\"en\" type=\"signature\" has-link=\"true\" variant=\"colour\">\n        <a href=\"https://canada.ca/en.html\">\n          Government of Canada\n        </a>\n      </gcds-signature>\n    `);\n  });\n  it('renders: Signature - French - no link', async () => {\n    const page = await newSpecPage({\n      components: [GcdsSignature],\n      html: `<gcds-signature type=\"signature\" lang=\"fr\"></gcds-signature>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-signature lang=\"fr\" type=\"signature\" variant=\"colour\">\n        <div class=\"gcds-signature\">\n          Gouvernement du Canada\n        </div>\n      </gcds-signature>\n    `);\n  });\n  it('renders: Signature - French - has link', async () => {\n    const page = await newSpecPage({\n      components: [GcdsSignature],\n      html: `<gcds-signature type=\"signature\" lang=\"fr\" has-link=\"true\"></gcds-signature>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-signature lang=\"fr\" type=\"signature\" has-link=\"true\" variant=\"colour\">\n        <a href=\"https://canada.ca/fr.html\">\n          Gouvernement du Canada\n        </a>\n      </gcds-signature>\n    `);\n  });\n\n  it('renders: wordmark - English', async () => {\n    const page = await newSpecPage({\n      components: [GcdsSignature],\n      html: `<gcds-signature type=\"wordmark\" lang=\"en\"></gcds-signature>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-signature lang=\"en\" type=\"wordmark\" variant=\"colour\">\n        <div class=\"gcds-signature\">\n          Symbol of the Government of Canada\n        </div>\n      </gcds-signature>\n    `);\n  });\n  it('renders: wordmark - French', async () => {\n    const page = await newSpecPage({\n      components: [GcdsSignature],\n      html: `<gcds-signature type=\"wordmark\" lang=\"fr\"></gcds-signature>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-signature lang=\"fr\" type=\"wordmark\" variant=\"colour\">\n        <div class=\"gcds-signature\">\n          Symbole du Gouvernement du Canada\n        </div>\n      </gcds-signature>\n    `);\n  });\n});\n"]}