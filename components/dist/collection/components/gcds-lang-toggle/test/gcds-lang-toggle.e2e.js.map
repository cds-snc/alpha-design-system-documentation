{"version":3,"file":"gcds-lang-toggle.e2e.js","sourceRoot":"","sources":["../../../../src/components/gcds-lang-toggle/test/gcds-lang-toggle.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAExD,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;EAChC,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;IACvB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC,uCAAuC,CAAC,CAAC;IAE/D,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACpD,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;EAC1C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH;;;GAGG;AAEH,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;EAC3C,8BAA8B;EAC9B,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;IACzB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC;;;KAGrB,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC;OACxC,SAAS,CAAC,WAAW,CAAC;OACtB,OAAO,EAAE,CAAC;IACb,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC;IAEnC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nconst { AxePuppeteer } = require('@axe-core/puppeteer');\n\ndescribe('gcds-lang-toggle', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<gcds-lang-toggle></gcds-lang-toggle>');\n\n    const element = await page.find('gcds-lang-toggle');\n    expect(element).toHaveClass('hydrated');\n  });\n});\n\n/*\n * Accessibility tests\n * Axe-core rules: https://github.com/dequelabs/axe-core/blob/develop/doc/rule-descriptions.md#wcag-21-level-a--aa-rules\n */\n\ndescribe('gcds-lang-toggle a11y tests', () => {\n  // Links have discernible text\n  it('Link name', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-lang-toggle href=\"/fr/\" lang=\"en\"></gcds-lang-toggle>\n      <gcds-lang-toggle href=\"/en/\" lang=\"fr\"></gcds-lang-toggle>\n    `);\n\n    const linkNameTest = new AxePuppeteer(page)\n      .withRules('link-name')\n      .analyze();\n    const results = await linkNameTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n});\n"]}