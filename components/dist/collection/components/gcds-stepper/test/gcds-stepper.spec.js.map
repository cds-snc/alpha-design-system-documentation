{"version":3,"file":"gcds-stepper.spec.js","sourceRoot":"","sources":["../../../../src/components/gcds-stepper/test/gcds-stepper.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GcdsStepper } from '../gcds-stepper';\n\ndescribe('gcds-stepper', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"2\" total-steps=\"6\">Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"2\" total-steps=\"6\">\n        <mock:shadow-root>\n          <gcds-heading tag=\"h2\" class=\"gcds-stepper\" margin-top=\"0\" margin-bottom=\"300\">\n            <span class=\"gcds-stepper__steps\">\n              Step 2 of 6\n              <gcds-sr-only> : </gcds-sr-only>\n            </span>\n            <slot></slot\n          </gcds-heading>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n\n  it('renders - current and total steps', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"2\" total-steps=\"6\">Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"2\" total-steps=\"6\">\n        <mock:shadow-root>\n          <gcds-heading tag=\"h2\" class=\"gcds-stepper\" margin-top=\"0\" margin-bottom=\"300\">\n            <span class=\"gcds-stepper__steps\">\n              Step 2 of 6\n              <gcds-sr-only> : </gcds-sr-only>\n            </span>\n            <slot></slot\n          </gcds-heading>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n\n  it('renders - tag h1', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"2\" total-steps=\"6\" tag=\"h1\">Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"2\" total-steps=\"6\" tag=\"h1\">\n        <mock:shadow-root>\n          <gcds-heading tag=\"h1\" class=\"gcds-stepper\" margin-top=\"0\" margin-bottom=\"300\">\n            <span class=\"gcds-stepper__steps\">\n              Step 2 of 6\n              <gcds-sr-only> : </gcds-sr-only>\n            </span>\n            <slot></slot\n          </gcds-heading>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n\n  it('renders - tag h2', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"2\" total-steps=\"6\" tag=\"h2\">Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"2\" total-steps=\"6\" tag=\"h2\">\n        <mock:shadow-root>\n          <gcds-heading tag=\"h2\" class=\"gcds-stepper\" margin-top=\"0\" margin-bottom=\"300\">\n            <span class=\"gcds-stepper__steps\">\n              Step 2 of 6\n              <gcds-sr-only> : </gcds-sr-only>\n            </span>\n            <slot></slot\n          </gcds-heading>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n\n  it('renders - tag h3', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"2\" total-steps=\"6\" tag=\"h3\">Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"2\" total-steps=\"6\" tag=\"h3\">\n        <mock:shadow-root>\n          <gcds-heading tag=\"h3\" class=\"gcds-stepper\" margin-top=\"0\" margin-bottom=\"300\">\n            <span class=\"gcds-stepper__steps\">\n              Step 2 of 6\n              <gcds-sr-only> : </gcds-sr-only>\n            </span>\n            <slot></slot\n          </gcds-heading>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n\n  it('renders - French', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"2\" total-steps=\"6\" lang=\"fr\">Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"2\" total-steps=\"6\" lang=\"fr\">\n        <mock:shadow-root>\n          <gcds-heading tag=\"h2\" class=\"gcds-stepper\" margin-top=\"0\" margin-bottom=\"300\">\n            <span class=\"gcds-stepper__steps\">\n              Ã‰tape 2 sur 6\n              <gcds-sr-only> : </gcds-sr-only>\n            </span>\n            <slot></slot\n          </gcds-heading>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n\n  it('renders - HTML children', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"2\" total-steps=\"6\">\n        <span class=\"example\">Section title</span>\n      </gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"2\" total-steps=\"6\">\n        <mock:shadow-root>\n          <gcds-heading tag=\"h2\" class=\"gcds-stepper\" margin-top=\"0\" margin-bottom=\"300\">\n            <span class=\"gcds-stepper__steps\">\n              Step 2 of 6\n              <gcds-sr-only> : </gcds-sr-only>\n            </span>\n            <slot></slot\n          </gcds-heading>\n        </mock:shadow-root>\n        <span class=\"example\">Section title</span>\n      </gcds-stepper>\n    `);\n  });\n\n  it('does not render - no children', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"2\" total-steps=\"6\"></gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"2\" total-steps=\"6\">\n        <mock:shadow-root>\n        </mock:shadow-root>\n      </gcds-stepper>\n    `);\n  });\n\n  it('does not render - no required attributes', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper>Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper>\n        <mock:shadow-root>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n\n  it('does not render - higher current step', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"8\" total-steps=\"6\">Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"8\" total-steps=\"6\">\n        <mock:shadow-root>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n\n  it('does not render - negative current step', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"-1\" total-steps=\"6\">Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"-1\" total-steps=\"6\">\n        <mock:shadow-root>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n\n  it('does not render - NaN total steps', async () => {\n    const page = await newSpecPage({\n      components: [GcdsStepper],\n      html: `<gcds-stepper current-step=\"1\" total-steps=\"A\">Section title</gcds-stepper>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-stepper current-step=\"1\" total-steps=\"A\">\n        <mock:shadow-root>\n        </mock:shadow-root>\n        Section title\n      </gcds-stepper>\n    `);\n  });\n});\n"]}