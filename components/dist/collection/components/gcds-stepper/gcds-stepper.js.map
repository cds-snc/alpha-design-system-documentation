{"version":3,"file":"gcds-stepper.js","sourceRoot":"","sources":["../../../src/components/gcds-stepper/gcds-stepper.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACzE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,IAAI,MAAM,aAAa,CAAC;AAO/B,MAAM,OAAO,WAAW;;;;;;IAsBtB;;OAEG;IACH,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS,CAAC,EAAE;YAChD,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;gBAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;YAC3B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,wBAAwB;QACxB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QAE/C,OAAO,CACL,EAAC,IAAI;YACH,UAAI,KAAK,EAAC,cAAc,IAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,UAAU,EAAE,CAAM,CAC7F,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Host, Prop, State, h } from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-stepper',\n  styleUrl: 'gcds-stepper.css',\n  shadow: true,\n})\nexport class GcdsStepper {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines the current step.\n   */\n  @Prop() currentStep!: number;\n\n  /**\n   * Defines the total amount of steps.\n   */\n  @Prop() totalSteps!: number;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const { currentStep, lang, totalSteps } = this;\n\n    return (\n      <Host>\n        <h6 class=\"gcds-stepper\">{`${i18n[lang].step} ${currentStep} ${i18n[lang].of} ${totalSteps}`}</h6>\n      </Host>\n    );\n  }\n}\n"]}