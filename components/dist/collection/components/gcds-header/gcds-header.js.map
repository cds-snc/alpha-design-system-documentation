{"version":3,"file":"gcds-header.js","sourceRoot":"","sources":["../../../src/components/gcds-header/gcds-header.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, Prop, h, State } from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-header',\n  styleUrl: 'gcds-header.css',\n  shadow: true,\n})\nexport class GcdsHeader {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * GcdsLangToggle - The href attribute specifies the URL of the opposite language page\n   */\n  @Prop({ reflect: true, mutable: false }) langHref!: string;\n\n  /**\n   * GcdsSignature - The variant of the Government of Canada signature\n   */\n  @Prop({ reflect: false, mutable: false }) signatureVariant:\n    | 'colour'\n    | 'white';\n  /**\n   * GcdsSignature - GCDS signature links to Canada.ca\n   */\n  @Prop({ reflect: false, mutable: false }) signatureHasLink: boolean = true;\n\n  /**\n   * Top navigation - Skip to content href\n   */\n  @Prop({ reflect: false, mutable: false }) skipToHref!: string;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  private get renderSkipToNav() {\n    if (this.el.querySelector('[slot=\"skip-to-nav\"]')) {\n      return <slot name=\"skip-to-nav\"></slot>;\n    } else if (this.skipToHref) {\n      return (\n        <nav class=\"gcds-header__skip-to-nav\">\n          <gcds-button\n            type=\"link\"\n            button-role=\"skip-to-content\"\n            href={this.skipToHref}\n          >\n            {i18n[this.lang].skip}\n          </gcds-button>\n        </nav>\n      );\n    } else {\n      return;\n    }\n  }\n\n  private get renderToggle() {\n    if (this.el.querySelector('[slot=\"toggle\"]')) {\n      return <slot name=\"toggle\"></slot>;\n    } else if (this.langHref) {\n      return (\n        <section class=\"brand__toggle\">\n          <gcds-lang-toggle\n            lang={this.lang}\n            href={this.langHref}\n          ></gcds-lang-toggle>\n        </section>\n      );\n    } else {\n      return;\n    }\n  }\n\n  private get renderSignature() {\n    const signVariant = this.signatureVariant\n      ? this.signatureVariant\n      : 'colour';\n\n    if (this.el.querySelector('[slot=\"signature\"]')) {\n      return <slot name=\"signature\"></slot>;\n    } else {\n      return (\n        <div class=\"brand__signature\">\n          <gcds-signature\n            type=\"signature\"\n            variant={signVariant}\n            has-link={this.signatureHasLink}\n            lang={this.lang}\n          ></gcds-signature>\n        </div>\n      );\n    }\n  }\n\n  private get renderSearch() {\n    if (this.el.querySelector('[slot=\"search\"]')) {\n      return (\n        <div class=\"brand__search\">\n          <slot name=\"search\"></slot>\n        </div>\n      );\n    } else {\n      return;\n    }\n  }\n\n  private get hasSearch() {\n    return !!this.el.querySelector('[slot=\"search\"]');\n  }\n\n  private get hasBanner() {\n    return !!this.el.querySelector('[slot=\"banner\"]');\n  }\n\n  private get hasBreadcrumb() {\n    return !!this.el.querySelector('[slot=\"breadcrumb\"]');\n  }\n\n  render() {\n    const {\n      renderSkipToNav,\n      renderToggle,\n      renderSignature,\n      renderSearch,\n      hasSearch,\n      hasBanner,\n      hasBreadcrumb,\n    } = this;\n    return (\n      <Host role=\"banner\">\n        {renderSkipToNav}\n        {hasBanner ? <slot name=\"banner\"></slot> : null}\n        <div class=\"gcds-header__brand\">\n          <div\n            class={`brand__container ${!hasSearch ? 'container--simple' : ''}`}\n          >\n            {renderToggle}\n            {renderSignature}\n            {renderSearch}\n          </div>\n        </div>\n        <slot name=\"menu\"></slot>\n        {hasBreadcrumb ? (\n          <div class=\"gcds-header__container\">\n            <slot name=\"breadcrumb\"></slot>\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"]}