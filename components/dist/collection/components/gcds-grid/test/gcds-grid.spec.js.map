{"version":3,"file":"gcds-grid.spec.js","sourceRoot":"","sources":["../../../../src/components/gcds-grid/test/gcds-grid.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAExC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;EACzB,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;IACpD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,WAAW,CAAC;MACjC,UAAU,EAAE,CAAC,QAAQ,CAAC;MACtB,IAAI,EAAE;;OAEL;KACF,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQxB,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;IAC3C,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,WAAW,CAAC;MACjC,UAAU,EAAE,CAAC,QAAQ,CAAC;MACtB,IAAI,EAAE;;OAEL;KACF,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQxB,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;IAChC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,WAAW,CAAC;MACjC,UAAU,EAAE,CAAC,QAAQ,CAAC;MACtB,IAAI,EAAE;;OAEL;KACF,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQxB,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GcdsGrid } from '../gcds-grid';\n\ndescribe('gcds-grid', () => {\n  it('renders - desktop, tablet and mobile', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsGrid],\n      html: `\n        <gcds-grid columns-desktop=\"1fr 1fr 1fr 1fr\" columns-tablet=\"1fr 1fr 1fr\" columns=\"1fr 1fr\" tag=\"ul\" />\n      `,\n    });\n    expect(root).toEqualHtml(`\n      <gcds-grid columns-desktop=\"1fr 1fr 1fr 1fr\" columns-tablet=\"1fr 1fr 1fr\" columns=\"1fr 1fr\" tag=\"ul\">\n        <mock:shadow-root>\n          <ul class=\"display-grid gcds-grid\" style=\"--gcds-grid-columns-desktop: 1fr 1fr 1fr 1fr; --gcds-grid-columns-tablet: 1fr 1fr 1fr; --gcds-grid-columns: 1fr 1fr;\">\n            <slot></slot>\n          </ul>\n        </mock:shadow-root>\n      </gcds-grid>\n    `);\n  });\n\n  it('renders - tablet and mobile', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsGrid],\n      html: `\n        <gcds-grid columns-tablet=\"1fr 1fr 1fr\" columns=\"1fr 1fr\" tag=\"ul\" />\n      `,\n    });\n    expect(root).toEqualHtml(`\n      <gcds-grid columns-tablet=\"1fr 1fr 1fr\" columns=\"1fr 1fr\" tag=\"ul\">\n        <mock:shadow-root>\n          <ul class=\"display-grid gcds-grid\" style=\"--gcds-grid-columns-tablet: 1fr 1fr 1fr; --gcds-grid-columns: 1fr 1fr;\">\n            <slot></slot>\n          </ul>\n        </mock:shadow-root>\n      </gcds-grid>\n    `);\n  });\n\n  it('renders - mobile', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsGrid],\n      html: `\n        <gcds-grid columns=\"1fr 1fr\" tag=\"ul\" />\n      `,\n    });\n    expect(root).toEqualHtml(`\n      <gcds-grid columns=\"1fr 1fr\" tag=\"ul\">\n        <mock:shadow-root>\n          <ul class=\"display-grid gcds-grid\" style=\"--gcds-grid-columns: 1fr 1fr;\">\n            <slot></slot>\n          </ul>\n        </mock:shadow-root>\n      </gcds-grid>\n    `);\n  });\n});\n"]}