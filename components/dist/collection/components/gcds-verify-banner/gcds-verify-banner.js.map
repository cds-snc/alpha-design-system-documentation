{"version":3,"file":"gcds-verify-banner.js","sourceRoot":"","sources":["../../../src/components/gcds-verify-banner/gcds-verify-banner.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, Prop, State, h } from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\nimport CanadaFlag from './assets/canada-flag.svg';\nimport ContentToggleArrow from './assets/content-toggle-arrow.svg';\n\n@Component({\n  tag: 'gcds-verify-banner',\n  styleUrl: 'gcds-verify-banner.css',\n  shadow: true,\n})\nexport class GcdsVerifyBanner {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines the container width of the verify banner content\n   */\n  @Prop() container?: 'full' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' = 'xl';\n\n  /**\n   * Defines if the banner's position is fixed.\n   */\n  @Prop() isFixed?: boolean = false;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const { container, isFixed, lang } = this;\n\n    return (\n      <Host>\n        <details\n          class={`gcds-verify-banner ${\n            isFixed ? 'verify-banner--is-fixed' : ''\n          }`}\n        >\n          <summary\n            class={container ? `container-${container}` : ''}\n            aria-expanded=\"false\"\n            role=\"button\"\n          >\n            <span class=\"svg-container\" innerHTML={CanadaFlag} />\n            <p>\n              <small>{i18n[lang].summary.text}</small>\n              <button class=\"verify-banner__toggle\">\n                <small>{i18n[lang].summary.link}</small>\n                <span class=\"svg-container\" innerHTML={ContentToggleArrow} />\n              </button>\n            </p>\n          </summary>\n          <div\n            class={`verify-banner__content ${\n              container ? `container-${container}` : ''\n            }`}\n          >\n            <p>\n              <small>{i18n[lang].content.description}</small>\n            </p>\n            <br />\n            <gcds-grid\n              tag=\"ul\"\n              container=\"lg\"\n              columns=\"1fr\"\n              columns-tablet={\n                container === 'xs' || container === 'sm' ? '1fr' : '1fr 1fr'\n              }\n            >\n              <li>\n                <h4>{i18n[lang].content.url.heading}</h4>\n                <p>\n                  <small>{i18n[lang].content.url.text}</small>\n                </p>\n              </li>\n              <li>\n                <h4>{i18n[lang].content.languages.heading}</h4>\n                <p>\n                  <small>{i18n[lang].content.languages.text}</small>\n                </p>\n              </li>\n              <li>\n                <h4>{i18n[lang].content.https.heading}</h4>\n                <p>\n                  <small>\n                    {i18n[lang].content.https.text} <strong>https://</strong>.\n                  </small>\n                </p>\n              </li>\n              <li>\n                <h4>{i18n[lang].content.contact.heading}</h4>\n                <p>\n                  <small>{i18n[lang].content.contact.text}</small>\n                </p>\n              </li>\n            </gcds-grid>\n          </div>\n        </details>\n      </Host>\n    );\n  }\n}\n"]}