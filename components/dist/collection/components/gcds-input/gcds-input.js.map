{"version":3,"file":"gcds-input.js","sourceRoot":"","sources":["../../../src/components/gcds-input/gcds-input.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  Watch,\n  EventEmitter,\n  State,\n  Method,\n  Host,\n  Prop,\n  h,\n  Listen,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n} from '../../validators';\n\n@Component({\n  tag: 'gcds-input',\n  styleUrl: 'gcds-input.css',\n  shadow: false,\n  scoped: true,\n})\nexport class GcdsInput {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLElement;\n\n  _validator: Validator<string> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Specifies if an input element is disabled or not.\n   */\n  @Prop({ mutable: true }) disabled?: boolean = false;\n  @Watch('disabled')\n  validateDisabledInput() {\n    if (this.required) {\n      this.disabled = false;\n    }\n  }\n\n  /**\n   * Error message for an invalid input element.\n   */\n  @Prop({ mutable: true }) errorMessage?: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Specifies if the label is hidden or not.\n   */\n  @Prop() hideLabel?: boolean = false;\n\n  /**\n   * Hint displayed below the label and above the input field.\n   */\n  @Prop() hint?: string;\n\n  /**\n   * Id + name attribute for an input element.\n   */\n  @Prop() inputId!: string;\n\n  /**\n   * Form field label\n   */\n  @Prop() label!: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop() required?: boolean = false;\n\n  /**\n   * Size attribute for an input element.\n   * Defines max-length as well.\n   */\n  @Prop() size?: number;\n\n  /**\n   * Set Input types\n   */\n  // prettier-ignore\n  @Prop() type?: 'email' | 'number' | 'password' | 'search' | 'text' | 'url' = 'text';\n\n  /**\n   * Default value for an input element.\n   */\n  @Prop({ mutable: true }) value?: string;\n\n  /**\n   * String to have autocomplete enabled\n   */\n  @Prop() autocomplete?: string;\n\n  /**\n   * Custom callback function on change event\n   */\n  @Prop() changeHandler: Function;\n\n  /**\n   * Custom callback function on focus event\n   */\n  @Prop() focusHandler: Function;\n\n  /**\n   * Custom callback function on blur event\n   */\n  @Prop() blurHandler: Function;\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    if (this.validator && !this.validateOn) {\n      this.validateOn = 'blur';\n    }\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other';\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Specifies if the input is invalid.\n   */\n  @State() hasError: boolean;\n  @Watch('hasError')\n  validateHasError() {\n    if (this.disabled) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the input has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  private onFocus = e => {\n    if (this.focusHandler) {\n      this.focusHandler(e);\n    }\n\n    this.gcdsFocus.emit();\n  };\n\n  /**\n   * Emitted when the input loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = e => {\n    if (this.blurHandler) {\n      this.blurHandler(e);\n    } else {\n      if (this.validateOn == 'blur') {\n        this.validate();\n      }\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  /**\n   * Update value based on user input.\n   */\n  @Event() gcdsChange: EventEmitter;\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    if (!this._validator.validate(this.value) && this._validator.errorMessage) {\n      this.errorMessage = this._validator.errorMessage[this.lang];\n      this.gcdsError.emit({\n        id: `#${this.inputId}`,\n        message: `${this.label} - ${this.errorMessage}`,\n      });\n    } else {\n      this.errorMessage = '';\n      this.gcdsValid.emit({ id: `#${this.inputId}` });\n    }\n  }\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsValid!: EventEmitter<object>;\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  handleChange(e) {\n    if (this.changeHandler) {\n      this.changeHandler(e);\n    } else {\n      const val = e.target && e.target.value;\n      this.value = val;\n    }\n\n    this.gcdsChange.emit(this.value);\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledInput();\n    this.validateHasError();\n    this.validateErrorMessage();\n    this.validateValidator();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'input', this.type);\n\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement, [\n      'placeholder',\n    ]);\n  }\n\n  componentWillUpdate() {\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n  }\n\n  render() {\n    const {\n      disabled,\n      errorMessage,\n      hideLabel,\n      hint,\n      inputId,\n      label,\n      required,\n      size,\n      type,\n      value,\n      hasError,\n      autocomplete,\n      inheritedAttributes,\n      lang,\n    } = this;\n\n    // Use max-width instead of size attribute to keep field responsive\n    const style = {\n      maxWidth: `${size * 1.5}ch`,\n    };\n\n    const attrsInput = {\n      disabled,\n      required,\n      type,\n      value,\n      autocomplete,\n      ...inheritedAttributes,\n    };\n\n    const attrsLabel = {\n      label,\n      required,\n    };\n\n    if (hint || errorMessage) {\n      const hintID = hint ? `hint-${inputId} ` : '';\n      const errorID = errorMessage ? `error-message-${inputId} ` : '';\n      attrsInput['aria-describedby'] = `${hintID}${errorID}${\n        attrsInput['aria-describedby']\n          ? ` ${attrsInput['aria-describedby']}`\n          : ''\n      }`;\n    }\n\n    return (\n      <Host>\n        <div\n          class={`gcds-input-wrapper ${disabled ? 'gcds-disabled' : ''} ${\n            hasError ? 'gcds-error' : ''\n          }`}\n        >\n          <gcds-label\n            {...attrsLabel}\n            hide-label={hideLabel}\n            label-for={inputId}\n            lang={lang}\n          />\n\n          {hint ? <gcds-hint hint={hint} hint-id={inputId} /> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={inputId} message={errorMessage} />\n          ) : null}\n\n          <input\n            {...attrsInput}\n            class={hasError ? 'gcds-error' : null}\n            id={inputId}\n            name={inputId}\n            onBlur={e => this.onBlur(e)}\n            onFocus={e => this.onFocus(e)}\n            onInput={e => this.handleChange(e)}\n            aria-labelledby={`label-for-${inputId}`}\n            aria-invalid={errorMessage ? 'true' : 'false'}\n            maxlength={size}\n            style={size ? style : null}\n            ref={element => (this.shadowElement = element as HTMLElement)}\n          />\n        </div>\n      </Host>\n    );\n  }\n}\n"]}