{"version":3,"file":"gcds-button.js","sourceRoot":"","sources":["../../../src/components/gcds-button/gcds-button.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Method,\n  Host,\n  Watch,\n  Prop,\n  State,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport { inheritAttributes } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-button',\n  styleUrl: 'gcds-button.css',\n  shadow: true,\n})\nexport class GcdsButton {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Set button types\n   */\n  // prettier-ignore\n  @Prop({ mutable: true }) type: 'submit' | 'reset' | 'button' | 'link' = 'button';\n  @Watch('type')\n  validateType(newValue: string) {\n    const values = ['submit', 'reset', 'button', 'link'];\n\n    if (!values.includes(newValue)) {\n      this.type = 'button';\n    }\n  }\n\n  /**\n   * Set the main style\n   */\n  @Prop({ mutable: true }) buttonRole:\n    | 'primary'\n    | 'secondary'\n    | 'danger'\n    | 'skip-to-content' = 'primary';\n\n  @Watch('buttonRole')\n  validateButtonRole(newValue: string) {\n    const values = ['primary', 'secondary', 'danger', 'skip-to-content'];\n\n    if (!values.includes(newValue)) {\n      this.buttonRole = 'primary';\n    }\n  }\n\n  /**\n   * Set the style variant\n   */\n  @Prop({ mutable: true }) buttonStyle: 'solid' | 'text-only' = 'solid';\n\n  @Watch('buttonStyle')\n  validateButtonStyle(newValue: string) {\n    const values = ['solid', 'text-only'];\n\n    if (!values.includes(newValue)) {\n      this.buttonStyle = 'solid';\n    }\n  }\n\n  /**\n   * Set the button size\n   */\n  @Prop({ mutable: true }) size: 'regular' | 'small' = 'regular';\n\n  @Watch('size')\n  validateSize(newValue: string) {\n    const values = ['regular', 'small'];\n\n    if (!values.includes(newValue)) {\n      this.size = 'regular';\n    }\n  }\n\n  /**\n   * The buttonId attribute specifies the id for a <button> element.\n   */\n  @Prop() buttonId: string;\n\n  /**\n   * The name attribute specifies the name for a <button> element.\n   */\n  @Prop() name: string | undefined;\n\n  /**\n   * The disabled attribute for a <button> element.\n   */\n  @Prop() disabled: boolean;\n\n  /**\n   * Link props\n   */\n\n  /**\n   * The href attribute specifies the URL of the page the link goes to\n   */\n  @Prop() href: string | undefined;\n\n  /**\n   * The rel attribute specifies the relationship between the current document and the linked document\n   */\n  @Prop() rel: string | undefined;\n\n  /**\n   * The target attribute specifies where to open the linked document\n   */\n  @Prop() target: string | undefined;\n\n  /**\n   * The download attribute specifies that the target (the file specified in the href attribute) will be downloaded when a user clicks on the hyperlink\n   */\n  @Prop() download: string | undefined;\n\n  /**\n   * Custom callback function on click event\n   */\n  @Prop() clickHandler: Function;\n\n  /**\n   * Custom callback function on focus event\n   */\n  @Prop() focusHandler: Function;\n\n  /**\n   * Custom callback function on blur event\n   */\n  @Prop() blurHandler: Function;\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the button has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the button loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateType(this.type);\n    this.validateButtonRole(this.buttonRole);\n    this.validateButtonStyle(this.buttonStyle);\n    this.validateSize(this.size);\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  /**\n   * Focus element\n   */\n  @Method()\n  async focusElement() {\n    this.shadowElement.focus();\n  }\n\n  private handleClick = (e: Event) => {\n    if (this.clickHandler) {\n      this.clickHandler(e);\n    } else {\n      if (!this.disabled && this.type != 'button' && this.type != 'link') {\n        // Attach button to form\n        const form = this.el.closest('form');\n\n        if (form) {\n          e.preventDefault();\n\n          const formButton = document.createElement('button');\n          formButton.type = this.type;\n          if (this.name) {\n            formButton.name = this.name;\n          }\n          formButton.style.display = 'none';\n          form.appendChild(formButton);\n          formButton.click();\n          formButton.remove();\n        }\n      }\n    }\n\n    // Has any inherited attributes changed on click\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n  };\n\n  private onFocus = e => {\n    if (this.focusHandler) {\n      this.focusHandler(e);\n    }\n\n    this.gcdsFocus.emit();\n  };\n\n  private onBlur = e => {\n    if (this.blurHandler) {\n      this.blurHandler(e);\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  render() {\n    const {\n      type,\n      buttonRole,\n      buttonStyle,\n      size,\n      buttonId,\n      disabled,\n      lang,\n      name,\n      href,\n      rel,\n      target,\n      download,\n      inheritedAttributes,\n    } = this;\n\n    const Tag = type != 'link' ? 'button' : 'a';\n    const attrs =\n      Tag === 'button'\n        ? {\n            type: type,\n            ariaDisabled: disabled,\n            name,\n          }\n        : {\n            href,\n            rel,\n            target,\n            download,\n          };\n\n    return (\n      <Host>\n        <Tag\n          {...attrs}\n          id={buttonId}\n          onBlur={e => this.onBlur(e)}\n          onFocus={e => this.onFocus(e)}\n          onClick={e => this.handleClick(e)}\n          class={`button--role-${buttonRole} button--${buttonStyle} button--${size}`}\n          ref={element => (this.shadowElement = element as HTMLElement)}\n          {...inheritedAttributes}\n          part=\"button\"\n        >\n          <slot name=\"left\"></slot>\n\n          <slot></slot>\n\n          {type === 'link' && target === '_blank' ? (\n            <gcds-icon\n              name=\"external-link\"\n              label={i18n[lang].label}\n              margin-left=\"200\"\n            />\n          ) : (\n            <slot name=\"right\"></slot>\n          )}\n        </Tag>\n      </Host>\n    );\n  }\n}\n"]}