{"version":3,"file":"gcds-button.e2e.js","sourceRoot":"","sources":["../../../../src/components/gcds-button/test/gcds-button.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nconst { AxePuppeteer } = require('@axe-core/puppeteer');\n\ndescribe('gcds-button', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n\n    await page.setContent('<gcds-button>Button Label</gcds-button>');\n    const element = await page.find('gcds-button');\n    expect(element.textContent).toEqual('Button Label');\n  });\n});\n\n/*\n * Accessibility tests\n * Axe-core rules: https://github.com/dequelabs/axe-core/blob/develop/doc/rule-descriptions.md#wcag-21-level-a--aa-rules\n */\n\ndescribe('gcds-button a11y tests', () => {\n  it('Colour contrast: Primary button-role, button-styles', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-button button-role=\"primary\">Button Label</gcds-button>\n      <gcds-button button-role=\"primary\" disabled>Button Label</gcds-button>\n\n      <gcds-button button-role=\"primary\" button-style=\"outline\">Button Label</gcds-button>\n      <gcds-button button-role=\"primary\" button-style=\"outline\" disabled>Button Label</gcds-button>\n\n      <gcds-button button-role=\"primary\" button-style=\"text-only\">Button Label</gcds-button>\n      <gcds-button button-role=\"primary\" button-style=\"text-only\" disabled>Button Label</gcds-button>\n    `);\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('color-contrast')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  it('Colour contrast: Secondary button-role, button-styles', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-button button-role=\"secondary\">Button Label</gcds-button>\n      <gcds-button button-role=\"secondary\" disabled>Button Label</gcds-button>\n\n      <gcds-button button-role=\"secondary\" button-style=\"outline\">Button Label</gcds-button>\n      <gcds-button button-role=\"secondary\" button-style=\"outline\" disabled>Button Label</gcds-button>\n\n      <gcds-button button-role=\"secondary\" button-style=\"text-only\">Button Label</gcds-button>\n      <gcds-button button-role=\"secondary\" button-style=\"text-only\" disabled>Button Label</gcds-button>\n    `);\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('color-contrast')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  it('Colour contrast: danger button-role, button-styles', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-button button-role=\"danger\">Button Label</gcds-button>\n      <gcds-button button-role=\"danger\" disabled>Button Label</gcds-button>\n\n      <gcds-button button-role=\"danger\" button-style=\"outline\">Button Label</gcds-button>\n      <gcds-button button-role=\"danger\" button-style=\"outline\" disabled>Button Label</gcds-button>\n\n      <gcds-button button-role=\"danger\" button-style=\"text-only\">Button Label</gcds-button>\n      <gcds-button button-role=\"danger\" button-style=\"text-only\" disabled>Button Label</gcds-button>\n    `);\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('color-contrast')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  it('Colour contrast: Button focus state', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`\n      <gcds-button>Button Label</gcds-button>\n    `);\n\n    await page.keyboard.press('Tab');\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('color-contrast')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  // Buttons have discernible text\n  it('Button name', async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      '<gcds-button button-role=\"primary\" button-style=\"solid\">Button Label</gcds-button>',\n    );\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('button-name')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  // Links have discernible text\n  it('Link name', async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      '<gcds-button type=\"link\" href=\"#\" button-role=\"primary\" button-style=\"solid\">Button Label</gcds-button>',\n    );\n\n    const colorContrastTest = new AxePuppeteer(page)\n      .withRules('link-name')\n      .analyze();\n    const results = await colorContrastTest;\n\n    expect(results.violations.length).toBe(0);\n  });\n\n  // Keyboard focus\n  it('Keyboard focus: button', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<gcds-button>Button Label</gcds-button>');\n\n    const buttonText = await (\n      await page.find('gcds-button >>> button')\n    ).innerText;\n\n    await page.keyboard.press('Tab');\n\n    expect(\n      await page.evaluate(\n        () => window.document.activeElement.shadowRoot.textContent,\n      ),\n    ).toEqual(buttonText);\n  });\n\n  it('Keyboard focus: link', async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      '<gcds-button type=\"link\" href=\"#\">Link Label</gcds-button>',\n    );\n\n    const linkText = await (await page.find('gcds-button >>> a')).innerText;\n\n    await page.keyboard.press('Tab');\n\n    expect(\n      await page.evaluate(\n        () => window.document.activeElement.shadowRoot.textContent,\n      ),\n    ).toEqual(linkText);\n  });\n});\n"]}