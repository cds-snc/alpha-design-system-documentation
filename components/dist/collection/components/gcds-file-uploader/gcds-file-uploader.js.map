{"version":3,"file":"gcds-file-uploader.js","sourceRoot":"","sources":["../../../src/components/gcds-file-uploader/gcds-file-uploader.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Prop,\n  Watch,\n  State,\n  Method,\n  Host,\n  h,\n  Listen,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n} from '../../validators';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-file-uploader',\n  styleUrl: 'gcds-file-uploader.css',\n  shadow: false,\n  scoped: true,\n})\nexport class GcdsFileUploader {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLInputElement;\n\n  _validator: Validator<unknown> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Id attribute for a file uploader element.\n   */\n  @Prop({ reflect: true, mutable: true }) uploaderId!: string;\n\n  /**\n   * Form field label.\n   */\n  @Prop({ reflect: true, mutable: false }) label!: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop({ reflect: true, mutable: false }) required: boolean = false;\n\n  /**\n   * Specifies if a file uploader element is disabled or not.\n   */\n  @Prop({ reflect: true, mutable: true }) disabled: boolean = false;\n\n  @Watch('disabled')\n  validateDisabledSelect() {\n    if (this.required) {\n      this.disabled = false;\n    }\n  }\n\n  /**\n   * Value for a file uploader element.\n   */\n  @Prop({ reflect: true, mutable: true }) value: string[] = [];\n\n  /**\n   * Defines the file types the file uploader accepts.\n   */\n  @Prop({ reflect: true, mutable: false }) accept: string;\n\n  /**\n   * Boolean that specifies if the user is allowed to select more than one file.\n   */\n  @Prop({ reflect: true, mutable: false }) multiple: boolean;\n\n  /**\n   * Error message for an invalid file uploader element.\n   */\n  @Prop({ reflect: true, mutable: true }) errorMessage: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Hint displayed below the label.\n   */\n  @Prop({ reflect: true, mutable: false }) hint: string;\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    if (this.validator && !this.validateOn) {\n      this.validateOn = 'blur';\n    }\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other';\n\n  /**\n   * Custom callback function on change event\n   */\n  @Prop() changeHandler: Function;\n\n  /**\n   * Custom callback function on focus event\n   */\n  @Prop() focusHandler: Function;\n\n  /**\n   * Custom callback function on blur event\n   */\n  @Prop() blurHandler: Function;\n\n  /**\n   * Specifies if the file uploader is invalid.\n   */\n  @State() hasError: boolean;\n  @Watch('hasError')\n  validateHasError() {\n    if (this.disabled) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the uploader has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  private onFocus = e => {\n    if (this.focusHandler) {\n      this.focusHandler(e);\n    }\n\n    this.gcdsFocus.emit();\n  };\n\n  /**\n   * Emitted when the uploader loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = e => {\n    if (this.blurHandler) {\n      this.blurHandler(e);\n    } else {\n      if (this.validateOn == 'blur') {\n        this.validate();\n      }\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  /**\n   * Update value based on user selection.\n   */\n  @Event() gcdsFileUploaderChange: EventEmitter;\n\n  handleChange = e => {\n    if (this.changeHandler) {\n      this.changeHandler(e);\n    } else {\n      const filesContainer: string[] = [];\n      const files = e.target.files;\n\n      for (let i = 0; i < files.length; i++) {\n        filesContainer.push(files[i].name);\n      }\n\n      this.value = [...filesContainer];\n\n      // Validate since the input loses focus when dialog opens\n      if (this.validateOn == 'blur') {\n        this.validate();\n      }\n    }\n\n    this.gcdsFileUploaderChange.emit(this.value);\n  };\n\n  /**\n   * Remove file and update value.\n   */\n  @Event() gcdsRemoveFile: EventEmitter;\n  removeFile = e => {\n    e.preventDefault();\n\n    const filesContainer = this.value;\n    const file = filesContainer.indexOf(\n      e.target.closest('.file-uploader__uploaded-file').childNodes[0]\n        .textContent,\n    );\n\n    if (file > -1) {\n      filesContainer.splice(file, 1);\n    }\n\n    this.value = [...filesContainer];\n    this.gcdsRemoveFile.emit(this.value);\n  };\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    if (\n      !this._validator.validate(this.shadowElement.files) &&\n      this._validator.errorMessage\n    ) {\n      this.errorMessage = this._validator.errorMessage[this.lang];\n      this.gcdsError.emit({\n        id: `#${this.uploaderId}`,\n        message: `${this.label} - ${this.errorMessage}`,\n      });\n    } else {\n      this.errorMessage = '';\n      this.gcdsValid.emit({ id: `#${this.uploaderId}` });\n    }\n  }\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsValid!: EventEmitter<object>;\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledSelect();\n    this.validateHasError();\n    this.validateErrorMessage();\n    this.validateValidator();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'file');\n\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n  }\n\n  componentWillUpdate() {\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n  }\n\n  render() {\n    const {\n      accept,\n      disabled,\n      errorMessage,\n      hasError,\n      hint,\n      label,\n      lang,\n      multiple,\n      required,\n      uploaderId,\n      value,\n      inheritedAttributes,\n    } = this;\n\n    const attrsInput = {\n      accept,\n      disabled,\n      multiple,\n      required,\n      value,\n      ...inheritedAttributes,\n      'aria-describedby': `${\n        inheritedAttributes['aria-describedby']\n          ? `${inheritedAttributes['aria-describedby']} `\n          : ''\n      }file-uploader__summary`,\n    };\n\n    const attrsLabel = {\n      label,\n      required,\n    };\n\n    if (hint || errorMessage) {\n      const hintID = hint ? `hint-${uploaderId} ` : '';\n      const errorID = errorMessage ? `error-message-${uploaderId} ` : '';\n      attrsInput[\n        'aria-describedby'\n      ] = `${hintID}${errorID}${attrsInput['aria-describedby']}`;\n    }\n\n    return (\n      <Host>\n        <div\n          class={`gcds-file-uploader-wrapper ${\n            disabled ? 'gcds-disabled' : ''\n          } ${hasError ? 'gcds-error' : ''}`}\n        >\n          <gcds-label {...attrsLabel} label-for={uploaderId} lang={lang} />\n\n          {hint ? <gcds-hint hint={hint} hint-id={uploaderId} /> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={uploaderId} message={errorMessage} />\n          ) : null}\n\n          <div\n            class={`file-uploader__input ${\n              value.length > 0 ? 'uploaded-files' : ''\n            }`}\n          >\n            <button\n              type=\"button\"\n              tabindex=\"-1\"\n              onClick={() => this.shadowElement.click()}\n            >\n              {i18n[lang].button.upload}\n            </button>\n            <input\n              type=\"file\"\n              id={uploaderId}\n              name={uploaderId}\n              {...attrsInput}\n              onBlur={e => this.onBlur(e)}\n              onFocus={e => this.onFocus(e)}\n              onChange={e => this.handleChange(e)}\n              aria-invalid={hasError ? 'true' : 'false'}\n              ref={element =>\n                (this.shadowElement = element as HTMLInputElement)\n              }\n            />\n            {value.length > 0 ? (\n              <p id=\"file-uploader__summary\">\n                <span>{i18n[lang].summary.selected} </span>\n                {value.map(file => (\n                  <span>{file} </span>\n                ))}\n              </p>\n            ) : (\n              <p id=\"file-uploader__summary\">{i18n[lang].summary.unselected}</p>\n            )}\n          </div>\n\n          {value.length > 0\n            ? value.map(file => (\n                <div\n                  class=\"file-uploader__uploaded-file\"\n                  aria-label={`${i18n[lang].removeFile} ${file}.`}\n                >\n                  <span>{file}</span>\n                  <button onClick={e => this.removeFile(e)}>\n                    <span>{i18n[lang].button.remove}</span>\n                    <gcds-icon name=\"times\" size=\"text\" margin-left=\"200\" />\n                  </button>\n                </div>\n              ))\n            : null}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}