{"version":3,"file":"gcds-date-input.spec.js","sourceRoot":"","sources":["../../../../src/components/gcds-date-input/test/gcds-date-input.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAEnD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,mFAAmF;SAC1F,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,6FAA6F;SACpG,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA+C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,sFAAsF;SAC7F,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,gGAAgG;SACvG,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,4FAA4F;SACnG,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,yGAAyG;SAChH,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,sGAAsG;SAC7G,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,sGAAsG;SAC7G,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,uGAAuG;SAC9G,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA+C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,sGAAsG;SAC7G,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8C7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,qCAAqC;SAC5C,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;KAI7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,qEAAqE;SAC5E,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;KAI7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,uEAAuE;SAC9E,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;KAI7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,+DAA+D;SACtE,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;KAI7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GcdsDateInput } from '../gcds-date-input';\n\ndescribe('gcds-date-input', () => {\n  it('renders - full', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"full\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"full\" legend=\"Date input\" name=\"date\">\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"en\" legend=\"Date input\">\n            <gcds-select aria-invalid=\"false\" class=\"gcds-date-input__month\" defaultvalue=\"Select a month\" label=\"Month\" name=\"month\" selectid=\"month\" value=\"\">\n              <option value=\"01\">\n                January\n              </option>\n              <option value=\"02\">\n                February\n              </option>\n              <option value=\"03\">\n                March\n              </option>\n              <option value=\"04\">\n                April\n              </option>\n              <option value=\"05\">\n                May\n              </option>\n              <option value=\"06\">\n                June\n              </option>\n              <option value=\"07\">\n                July\n              </option>\n              <option value=\"08\">\n                August\n              </option>\n              <option value=\"09\">\n                September\n              </option>\n              <option value=\"10\">\n                October\n              </option>\n              <option value=\"11\">\n                November\n              </option>\n              <option value=\"12\">\n                December\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__day\" inputid=\"day\" label=\"Day\" name=\"day\" size=\"2\" type=\"number\" value=\"\"></gcds-input>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Year\" name=\"year\" size=\"4\" type=\"number\" value=\"\"></gcds-input>\n          </gcds-fieldset>\n        </gcds-date-input>\n    `);\n  });\n\n  it('renders - full - french', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"full\" lang=\"fr\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"full\" lang=\"fr\" legend=\"Date input\" name=\"date\">\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"fr\" legend=\"Date input\">\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__day\" inputid=\"day\" label=\"Jour\" name=\"day\" size=\"2\" type=\"number\" value=\"\"></gcds-input>\n            <gcds-select aria-invalid=\"false\" class=\"gcds-date-input__month\" defaultvalue=\"Sélectionnez un mois\" label=\"Mois\" name=\"month\" selectid=\"month\" value=\"\">\n              <option value=\"01\">\n                janvier\n              </option>\n              <option value=\"02\">\n                février\n              </option>\n              <option value=\"03\">\n                mars\n              </option>\n              <option value=\"04\">\n                avril\n              </option>\n              <option value=\"05\">\n                mai\n              </option>\n              <option value=\"06\">\n                juin\n              </option>\n              <option value=\"07\">\n                juillet\n              </option>\n              <option value=\"08\">\n                août\n              </option>\n              <option value=\"09\">\n                septembre\n              </option>\n              <option value=\"10\">\n                octobre\n              </option>\n              <option value=\"11\">\n                novembre\n              </option>\n              <option value=\"12\">\n                décembre\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Année\" name=\"year\" size=\"4\" type=\"number\" value=\"\"></gcds-input>\n          </gcds-fieldset>\n        </mock:shadow-root>\n      </gcds-date-input>\n    `);\n  });\n\n  it('renders - compact', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"compact\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"compact\" legend=\"Date input\" name=\"date\">\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"en\" legend=\"Date input\">\n            <gcds-select aria-invalid=\"false\" class=\"gcds-date-input__month\" defaultvalue=\"Select a month\" label=\"Month\" name=\"month\" selectid=\"month\" value=\"\">\n              <option value=\"01\">\n                January\n              </option>\n              <option value=\"02\">\n                February\n              </option>\n              <option value=\"03\">\n                March\n              </option>\n              <option value=\"04\">\n                April\n              </option>\n              <option value=\"05\">\n                May\n              </option>\n              <option value=\"06\">\n                June\n              </option>\n              <option value=\"07\">\n                July\n              </option>\n              <option value=\"08\">\n                August\n              </option>\n              <option value=\"09\">\n                September\n              </option>\n              <option value=\"10\">\n                October\n              </option>\n              <option value=\"11\">\n                November\n              </option>\n              <option value=\"12\">\n                December\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Year\" name=\"year\" size=\"4\" type=\"number\" value=\"\"></gcds-input>\n          </gcds-fieldset>\n        </gcds-date-input>\n    `);\n  });\n\n  it('renders - compact - french', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"compact\" lang=\"fr\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"compact\" lang=\"fr\" legend=\"Date input\" name=\"date\">\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"fr\" legend=\"Date input\">\n            <gcds-select aria-invalid=\"false\" class=\"gcds-date-input__month\" defaultvalue=\"Sélectionnez un mois\" label=\"Mois\" name=\"month\" selectid=\"month\" value=\"\">\n              <option value=\"01\">\n                janvier\n              </option>\n              <option value=\"02\">\n                février\n              </option>\n              <option value=\"03\">\n                mars\n              </option>\n              <option value=\"04\">\n                avril\n              </option>\n              <option value=\"05\">\n                mai\n              </option>\n              <option value=\"06\">\n                juin\n              </option>\n              <option value=\"07\">\n                juillet\n              </option>\n              <option value=\"08\">\n                août\n              </option>\n              <option value=\"09\">\n                septembre\n              </option>\n              <option value=\"10\">\n                octobre\n              </option>\n              <option value=\"11\">\n                novembre\n              </option>\n              <option value=\"12\">\n                décembre\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Année\" name=\"year\" size=\"4\" type=\"number\" value=\"\"></gcds-input>\n          </gcds-fieldset>\n        </mock:shadow-root>\n      </gcds-date-input>\n    `);\n  });\n\n  it('renders - required', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"full\" required></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"full\" legend=\"Date input\" name=\"date\" required>\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"en\" legend=\"Date input\" required=\"\">\n            <gcds-select aria-invalid=\"false\" aria-required=\"true\" class=\"gcds-date-input__month\" defaultvalue=\"Select a month\" label=\"Month\" name=\"month\" selectid=\"month\" value=\"\">\n              <option value=\"01\">\n                January\n              </option>\n              <option value=\"02\">\n                February\n              </option>\n              <option value=\"03\">\n                March\n              </option>\n              <option value=\"04\">\n                April\n              </option>\n              <option value=\"05\">\n                May\n              </option>\n              <option value=\"06\">\n                June\n              </option>\n              <option value=\"07\">\n                July\n              </option>\n              <option value=\"08\">\n                August\n              </option>\n              <option value=\"09\">\n                September\n              </option>\n              <option value=\"10\">\n                October\n              </option>\n              <option value=\"11\">\n                November\n              </option>\n              <option value=\"12\">\n                December\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" aria-required=\"true\" class=\"gcds-date-input__day\" inputid=\"day\" label=\"Day\" name=\"day\" size=\"2\" type=\"number\" value=\"\"></gcds-input>\n            <gcds-input aria-invalid=\"false\" aria-required=\"true\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Year\" name=\"year\" size=\"4\" type=\"number\" value=\"\"></gcds-input>\n          </gcds-fieldset>\n        </gcds-date-input>\n    `);\n  });\n\n  it('renders - hint', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"full\" hint=\"This is a hint\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"full\" legend=\"Date input\" name=\"date\" hint=\"This is a hint\">\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input--hint gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"en\" legend=\"Date input\" hint=\"This is a hint\">\n            <gcds-select aria-invalid=\"false\" class=\"gcds-date-input__month\" defaultvalue=\"Select a month\" label=\"Month\" name=\"month\" selectid=\"month\" value=\"\">\n              <option value=\"01\">\n                January\n              </option>\n              <option value=\"02\">\n                February\n              </option>\n              <option value=\"03\">\n                March\n              </option>\n              <option value=\"04\">\n                April\n              </option>\n              <option value=\"05\">\n                May\n              </option>\n              <option value=\"06\">\n                June\n              </option>\n              <option value=\"07\">\n                July\n              </option>\n              <option value=\"08\">\n                August\n              </option>\n              <option value=\"09\">\n                September\n              </option>\n              <option value=\"10\">\n                October\n              </option>\n              <option value=\"11\">\n                November\n              </option>\n              <option value=\"12\">\n                December\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__day\" inputid=\"day\" label=\"Day\" name=\"day\" size=\"2\" type=\"number\" value=\"\"></gcds-input>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Year\" name=\"year\" size=\"4\" type=\"number\" value=\"\"></gcds-input>\n          </gcds-fieldset>\n        </gcds-date-input>\n    `);\n  });\n\n  it('renders - full value', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"full\" value=\"1991-03-15\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"full\" legend=\"Date input\" name=\"date\" value=\"1991-03-15\">\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"en\" legend=\"Date input\">\n            <gcds-select aria-invalid=\"false\" class=\"gcds-date-input__month\" defaultvalue=\"Select a month\" label=\"Month\" name=\"month\" selectid=\"month\" value=\"03\">\n              <option value=\"01\">\n                January\n              </option>\n              <option value=\"02\">\n                February\n              </option>\n              <option value=\"03\">\n                March\n              </option>\n              <option value=\"04\">\n                April\n              </option>\n              <option value=\"05\">\n                May\n              </option>\n              <option value=\"06\">\n                June\n              </option>\n              <option value=\"07\">\n                July\n              </option>\n              <option value=\"08\">\n                August\n              </option>\n              <option value=\"09\">\n                September\n              </option>\n              <option value=\"10\">\n                October\n              </option>\n              <option value=\"11\">\n                November\n              </option>\n              <option value=\"12\">\n                December\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__day\" inputid=\"day\" label=\"Day\" name=\"day\" size=\"2\" type=\"number\" value=\"15\"></gcds-input>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Year\" name=\"year\" size=\"4\" type=\"number\" value=\"1991\"></gcds-input>\n          </gcds-fieldset>\n        </gcds-date-input>\n    `);\n  });\n\n  it('renders - compact value', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"compact\" value=\"1991-03\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"compact\" legend=\"Date input\" name=\"date\" value=\"1991-03\">\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"en\" legend=\"Date input\">\n            <gcds-select aria-invalid=\"false\" class=\"gcds-date-input__month\" defaultvalue=\"Select a month\" label=\"Month\" name=\"month\" selectid=\"month\" value=\"03\">\n              <option value=\"01\">\n                January\n              </option>\n              <option value=\"02\">\n                February\n              </option>\n              <option value=\"03\">\n                March\n              </option>\n              <option value=\"04\">\n                April\n              </option>\n              <option value=\"05\">\n                May\n              </option>\n              <option value=\"06\">\n                June\n              </option>\n              <option value=\"07\">\n                July\n              </option>\n              <option value=\"08\">\n                August\n              </option>\n              <option value=\"09\">\n                September\n              </option>\n              <option value=\"10\">\n                October\n              </option>\n              <option value=\"11\">\n                November\n              </option>\n              <option value=\"12\">\n                December\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Year\" name=\"year\" size=\"4\" type=\"number\" value=\"1991\"></gcds-input>\n          </gcds-fieldset>\n        </gcds-date-input>\n    `);\n  });\n\n  it('renders - full - improper value', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"full\" value=\"1991-03-015\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"full\" legend=\"Date input\" name=\"date\" value=\"1991-03-015\">\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"en\" legend=\"Date input\">\n            <gcds-select aria-invalid=\"false\" class=\"gcds-date-input__month\" defaultvalue=\"Select a month\" label=\"Month\" name=\"month\" selectid=\"month\" value=\"\">\n              <option value=\"01\">\n                January\n              </option>\n              <option value=\"02\">\n                February\n              </option>\n              <option value=\"03\">\n                March\n              </option>\n              <option value=\"04\">\n                April\n              </option>\n              <option value=\"05\">\n                May\n              </option>\n              <option value=\"06\">\n                June\n              </option>\n              <option value=\"07\">\n                July\n              </option>\n              <option value=\"08\">\n                August\n              </option>\n              <option value=\"09\">\n                September\n              </option>\n              <option value=\"10\">\n                October\n              </option>\n              <option value=\"11\">\n                November\n              </option>\n              <option value=\"12\">\n                December\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__day\" inputid=\"day\" label=\"Day\" name=\"day\" size=\"2\" type=\"number\" value=\"\"></gcds-input>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Year\" name=\"year\" size=\"4\" type=\"number\" value=\"\"></gcds-input>\n          </gcds-fieldset>\n        </mock:shadow-root>\n      </gcds-date-input>\n    `);\n  });\n\n  it('renders - compact - improper value', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\" format=\"compact\" value=\"1991-15\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input format=\"compact\" legend=\"Date input\" name=\"date\" value=\"1991-15\">\n        <mock:shadow-root>\n          <gcds-fieldset class=\"gcds-date-input__fieldset\" data-date=\"true\" fieldsetid=\"date-input\" lang=\"en\" legend=\"Date input\">\n            <gcds-select aria-invalid=\"false\" class=\"gcds-date-input__month\" defaultvalue=\"Select a month\" label=\"Month\" name=\"month\" selectid=\"month\" value=\"\">\n              <option value=\"01\">\n                January\n              </option>\n              <option value=\"02\">\n                February\n              </option>\n              <option value=\"03\">\n                March\n              </option>\n              <option value=\"04\">\n                April\n              </option>\n              <option value=\"05\">\n                May\n              </option>\n              <option value=\"06\">\n                June\n              </option>\n              <option value=\"07\">\n                July\n              </option>\n              <option value=\"08\">\n                August\n              </option>\n              <option value=\"09\">\n                September\n              </option>\n              <option value=\"10\">\n                October\n              </option>\n              <option value=\"11\">\n                November\n              </option>\n              <option value=\"12\">\n                December\n              </option>\n            </gcds-select>\n            <gcds-input aria-invalid=\"false\" class=\"gcds-date-input__year\" inputid=\"year\" label=\"Year\" name=\"year\" size=\"4\" type=\"number\" value=\"\"></gcds-input>\n          </gcds-fieldset>\n        </mock:shadow-root>\n      </gcds-date-input>\n    `);\n  });\n\n  it('does notrender - missing all required fields', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input>\n        <mock:shadow-root>\n      </gcds-date-input>\n    `);\n  });\n\n  it('does notrender - missing format', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" name=\"date\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input legend=\"Date input\" name=\"date\">\n        <mock:shadow-root>\n      </gcds-date-input>\n    `);\n  });\n\n  it('does notrender - missing name', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input legend=\"Date input\" format=\"full\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input legend=\"Date input\" format=\"full\">\n        <mock:shadow-root>\n      </gcds-date-input>\n    `);\n  });\n\n  it('does notrender - missing legend', async () => {\n    const page = await newSpecPage({\n      components: [GcdsDateInput],\n      html: `<gcds-date-input name=\"date\" format=\"full\"></gcds-date-input>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-date-input name=\"date\" format=\"full\">\n        <mock:shadow-root>\n      </gcds-date-input>\n    `);\n  });\n});\n"]}