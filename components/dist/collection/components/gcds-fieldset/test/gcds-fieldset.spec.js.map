{"version":3,"file":"gcds-fieldset.spec.js","sourceRoot":"","sources":["../../../../src/components/gcds-fieldset/test/gcds-fieldset.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE,8EAA8E;SACrF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQ7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE,uFAAuF;SAC9F,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE,mGAAmG;SAC1G,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE,6GAA6G;SACpH,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE;;;uBAGW;SAClB,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GcdsFieldset } from '../gcds-fieldset';\n\ndescribe('gcds-fieldset', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [GcdsFieldset],\n      html: `<gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\"></gcds-fieldset>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\">\n        <fieldset class=\"gcds-fieldset\" aria-labelledby=\"legend-field\" id=\"field\" tabindex=\"-1\">\n          <legend id=\"legend-field\">\n            Fieldset legend\n          </legend>\n        </fieldset>\n      </gcds-fieldset>\n    `);\n  });\n  it('renders - required', async () => {\n    const page = await newSpecPage({\n      components: [GcdsFieldset],\n      html: `<gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\" required></gcds-fieldset>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\" required>\n        <fieldset class=\"gcds-fieldset\" aria-labelledby=\"legend-field\" id=\"field\" tabindex=\"-1\">\n          <legend id=\"legend-field\">\n            Fieldset legend\n            <strong class=\"legend__required\">\n              (required)\n            </strong>\n          </legend>\n        </fieldset>\n      </gcds-fieldset>\n    `);\n  });\n  it('renders - hint', async () => {\n    const page = await newSpecPage({\n      components: [GcdsFieldset],\n      html: `<gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\" hint=\"Fieldset hint\"></gcds-fieldset>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\" hint=\"Fieldset hint\">\n          <fieldset class=\"gcds-fieldset\" aria-labelledby=\"legend-field hint-field\" id=\"field\" tabindex=\"-1\">\n          <legend id=\"legend-field\">\n            Fieldset legend\n          </legend>\n          <gcds-hint hint=\"Fieldset hint\" hint-id=\"field\"></gcds-hint>\n        </fieldset>\n      </gcds-fieldset>\n    `);\n  });\n  it('renders - error message', async () => {\n    const page = await newSpecPage({\n      components: [GcdsFieldset],\n      html: `<gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\" error-message=\"Fieldset error\"></gcds-fieldset>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\" error-message=\"Fieldset error\">\n        <fieldset aria-describedby=\"error-message-field \" aria-labelledby=\"legend-field\" class=\"gcds-fieldset gcds-fieldset--error\" id=\"field\" tabindex=\"-1\">\n          <legend id=\"legend-field\">\n            Fieldset legend\n          </legend>\n          <gcds-error-message message=\"Fieldset error\" messageId=\"field\"></gcds-error-message>\n        </fieldset>\n      </gcds-fieldset>\n    `);\n  });\n  it('renders - passed radio button', async () => {\n    const page = await newSpecPage({\n      components: [GcdsFieldset],\n      html: `\n      <gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\">\n        <gcds-radio radio-id=\"radio\" label=\"Radio button\" name=\"radio\"></gcds-radio>\n      </gcds-fieldset>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-fieldset fieldset-id=\"field\" legend=\"Fieldset legend\">\n        <fieldset class=\"gcds-fieldset\" aria-labelledby=\"legend-field\" id=\"field\" tabindex=\"-1\">\n          <legend id=\"legend-field\">\n            Fieldset legend\n          </legend>\n          <gcds-radio label=\"Radio button\" name=\"radio\" radio-id=\"radio\"></gcds-radio>\n        </fieldset>\n      </gcds-fieldset>\n    `);\n  });\n});\n"]}