{"version":3,"file":"gcds-fieldset.js","sourceRoot":"","sources":["../../../src/components/gcds-fieldset/gcds-fieldset.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,IAAI,EACJ,OAAO,EACP,MAAM,EACN,KAAK,EAEL,MAAM,EACN,KAAK,EACL,IAAI,EACJ,KAAK,EACL,CAAC,GACF,MAAM,eAAe,CAAC;AACvB,OAAO,EACL,cAAc,EACd,cAAc,EACd,iBAAiB,GAClB,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,gBAAgB,EAEhB,YAAY,EACZ,iBAAiB,GAClB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,wBAAwB,EAAE,MAAM,0DAA0D,CAAC;AACpG,OAAO,IAAI,MAAM,aAAa,CAAC;AAQ/B,MAAM,OAAO,YAAY;;IAKvB,eAAU,GAAsB,gBAAgB,CAAC;;;;;;;;;;;+BAoGV,EAAE;;EA1EzC,oBAAoB;IAClB,IAAI,IAAI,CAAC,QAAQ,EAAE;MACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KACxB;SAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;MAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;SAAM,IAAI,IAAI,CAAC,YAAY,IAAI,EAAE,EAAE;MAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;EACH,CAAC;EAaD,wBAAwB;IACtB,IAAI,IAAI,CAAC,QAAQ,EAAE;MACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAED,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;MACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAChD,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;OAClD;KACF;EACH,CAAC;EAGD,oBAAoB,CAAC,QAAiB,EAAE,SAAkB;IACxD,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,EAAE;MACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAChD,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;OACjD;KACF;EACH,CAAC;EAUD,iBAAiB;IACf,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;MACtC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;KAC1B;EACH,CAAC;EAoCD;;KAEG;EAEH,KAAK,CAAC,QAAQ;IACZ,IACE,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;MAC1C,IAAI,CAAC,UAAU,CAAC,YAAY,EAC5B;MACA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC5D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;MAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAClB,EAAE,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE;QACzB,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,IAAI,CAAC,YAAY,EAAE;OACjD,CAAC,CAAC;KACJ;SAAM;MACL,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;MACvB,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;MAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;KACpD;EACH,CAAC;EAGD,YAAY;IACV,IACE,IAAI,CAAC,SAAS;MACd,IAAI,CAAC,UAAU,IAAI,MAAM;MACzB,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,EACjC;MACA,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;EACH,CAAC;EAED;;KAEG;EAEH,oBAAoB,CAAC,CAAC;IACpB,IACE,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,EAAE;MACvB,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EACnE;MACA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;EACH,CAAC;EAGD,yBAAyB,CAAC,CAAC;IACzB,IAAI,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;MAC5C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;EACH,CAAC;EAaD,cAAc,CAAC,CAAC;IACd,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;MACvC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,EAAE;QACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;OACjB;MAED,IAAI,IAAI,CAAC,QAAQ,EAAE;QACjB,CAAC,CAAC,cAAc,EAAE,CAAC;OACpB;KACF;EACH,CAAC;EAED;;KAEG;EACH,UAAU;IACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS,CAAC,EAAE;MAChD,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;QACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;OAC1B;IACH,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;EAC5C,CAAC;EAED,KAAK,CAAC,iBAAiB;IACrB,wBAAwB;IACxB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;IAElB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAEzB,sCAAsC;IACtC,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IAEvC,IAAI,IAAI,CAAC,SAAS,EAAE;MAClB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAChD;IAED,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;EAC5E,CAAC;EAED,mBAAmB;IACjB,IAAI,IAAI,CAAC,SAAS,EAAE;MAClB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAChD;EACH,CAAC;EAED,MAAM;IACJ,MAAM,EACJ,IAAI,EACJ,UAAU,EACV,MAAM,EACN,QAAQ,EACR,YAAY,EACZ,QAAQ,EACR,IAAI,EACJ,QAAQ,EACR,mBAAmB,GACpB,GAAG,IAAI,CAAC;IAET,MAAM,aAAa,mBACjB,QAAQ,IACL,mBAAmB,CACvB,CAAC;IAEF,IAAI,YAAY,EAAE;MAChB,aAAa,CAAC,kBAAkB,CAAC,GAAG,iBAAiB,UAAU,IAC7D,aAAa,CAAC,kBAAkB,CAAC;QAC/B,CAAC,CAAC,IAAI,aAAa,CAAC,kBAAkB,CAAC,EAAE;QACzC,CAAC,CAAC,EACN,EAAE,CAAC;KACJ;IAED,OAAO,CACL,EAAC,IAAI;MACH,8BACE,KAAK,EAAE,iBAAiB,QAAQ,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,EAAE,EAChE,EAAE,EAAE,UAAU,IACV,aAAa,uBAEf,IAAI;UACF,CAAC,CAAC,UAAU,UAAU,SAAS,UAAU,EAAE;UAC3C,CAAC,CAAC,UAAU,UAAU,EAAE,EAE5B,QAAQ,EAAC,IAAI,EACb,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,OAAsB,CAAC;QAE7D,cAAQ,EAAE,EAAE,UAAU,UAAU,EAAE;UAC/B,MAAM;UACN,QAAQ,CAAC,CAAC,CAAC,CACV,cAAQ,KAAK,EAAC,kBAAkB;;YAAG,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ;gBAAW,CAClE,CAAC,CAAC,CAAC,IAAI,CACD;QAER,IAAI,CAAC,CAAC,CAAC,iBAAW,IAAI,EAAE,IAAI,aAAW,UAAU,GAAI,CAAC,CAAC,CAAC,IAAI;QAE5D,YAAY,CAAC,CAAC,CAAC,CACd,0BAAoB,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,GAAI,CACrE,CAAC,CAAC,CAAC,IAAI;QACR,eAAa,CACJ,CACN,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\n  Component,\n  Prop,\n  Element,\n  Method,\n  Event,\n  EventEmitter,\n  Listen,\n  State,\n  Host,\n  Watch,\n  h,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  observerConfig,\n  inheritAttributes,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n} from '../../validators';\nimport { validateFieldsetElements } from '../../validators/fieldset-validators/fieldset-validators';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-fieldset',\n  styleUrl: 'gcds-fieldset.css',\n  shadow: false,\n  scoped: true,\n})\nexport class GcdsFieldset {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLElement;\n\n  _validator: Validator<string> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * The unique identifier for the component\n   */\n  @Prop({ reflect: true, mutable: false }) fieldsetId!: string;\n\n  /**\n   * The title for the contents of the fieldset\n   */\n  @Prop({ reflect: true, mutable: false }) legend!: string;\n\n  /**\n   * Flag the contents are required\n   */\n  @Prop({ reflect: true, mutable: false }) required: boolean;\n\n  /**\n   * Error message for invalid form elements in group.\n   */\n  @Prop({ reflect: true, mutable: true }) errorMessage: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Hint displayed below the legend.\n   */\n  @Prop({ reflect: true, mutable: false }) hint: string;\n\n  /**\n   * Flag to disable fieldset and its contents\n   */\n  @Prop({ reflect: true, mutable: true }) disabled: boolean;\n\n  @Watch('disabled')\n  validateDisabledFieldset() {\n    if (this.required) {\n      this.disabled = false;\n    }\n\n    if (this.disabled == true) {\n      for (let i = 0; i < this.el.children.length; i++) {\n        this.el.children[i].setAttribute('disabled', '');\n      }\n    }\n  }\n\n  @Watch('disabled')\n  handleDisabledChange(newValue: boolean, _oldValue: boolean) {\n    if (_oldValue && newValue != _oldValue) {\n      for (let i = 0; i < this.el.children.length; i++) {\n        this.el.children[i].removeAttribute('disabled');\n      }\n    }\n  }\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    if (this.validator && !this.validateOn) {\n      this.validateOn = 'blur';\n    }\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other';\n\n  /**\n   * State to handle errors\n   */\n  @State() hasError: boolean;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the fieldset has a validation error.\n   */\n  @Event({}) gcdsGroupError!: EventEmitter<string>;\n\n  /**\n   * Emitted when the fieldset has a validation error.\n   */\n  @Event() gcdsGroupErrorClear!: EventEmitter<void>;\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    if (\n      !this._validator.validate(this.fieldsetId) &&\n      this._validator.errorMessage\n    ) {\n      this.errorMessage = this._validator.errorMessage[this.lang];\n      this.gcdsGroupError.emit(this.errorMessage);\n      this.gcdsError.emit({\n        id: `#${this.fieldsetId}`,\n        message: `${this.legend} - ${this.errorMessage}`,\n      });\n    } else {\n      this.errorMessage = '';\n      this.gcdsGroupErrorClear.emit();\n      this.gcdsValid.emit({ id: `#${this.fieldsetId}` });\n    }\n  }\n\n  @Listen('gcdsBlur')\n  blurValidate() {\n    if (\n      this.validator &&\n      this.validateOn == 'blur' &&\n      !this.el.matches(':focus-within')\n    ) {\n      this.validate();\n    }\n  }\n\n  /**\n   * Event listener for gcds-fieldset errors\n   */\n  @Listen('gcdsGroupError', { target: 'body' })\n  gcdsParentGroupError(e) {\n    if (\n      e.srcElement == this.el &&\n      validateFieldsetElements(this.el, this.el.children).includes(false)\n    ) {\n      this.hasError = true;\n    }\n  }\n\n  @Listen('gcdsGroupErrorClear', { target: 'body' })\n  gcdsParentGroupErrorClear(e) {\n    if (e.srcElement == this.el && this.hasError) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Emitted when the fieldset has a validation error.\n   */\n  @Event() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the fieldset has a validation error.\n   */\n  @Event() gcdsValid!: EventEmitter<object>;\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledFieldset();\n    this.validateErrorMessage();\n    this.validateValidator();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'fieldset');\n\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n  }\n\n  componentWillUpdate() {\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n  }\n\n  render() {\n    const {\n      lang,\n      fieldsetId,\n      legend,\n      required,\n      errorMessage,\n      hasError,\n      hint,\n      disabled,\n      inheritedAttributes,\n    } = this;\n\n    const fieldsetAttrs = {\n      disabled,\n      ...inheritedAttributes,\n    };\n\n    if (errorMessage) {\n      fieldsetAttrs['aria-describedby'] = `error-message-${fieldsetId} ${\n        fieldsetAttrs['aria-describedby']\n          ? ` ${fieldsetAttrs['aria-describedby']}`\n          : ''\n      }`;\n    }\n\n    return (\n      <Host>\n        <fieldset\n          class={`gcds-fieldset ${hasError ? 'gcds-fieldset--error' : ''}`}\n          id={fieldsetId}\n          {...fieldsetAttrs}\n          aria-labelledby={\n            hint\n              ? `legend-${fieldsetId} hint-${fieldsetId}`\n              : `legend-${fieldsetId}`\n          }\n          tabindex=\"-1\"\n          ref={element => (this.shadowElement = element as HTMLElement)}\n        >\n          <legend id={`legend-${fieldsetId}`}>\n            {legend}\n            {required ? (\n              <strong class=\"legend__required\">({i18n[lang].required})</strong>\n            ) : null}\n          </legend>\n\n          {hint ? <gcds-hint hint={hint} hint-id={fieldsetId} /> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={fieldsetId} message={errorMessage} />\n          ) : null}\n          <slot></slot>\n        </fieldset>\n      </Host>\n    );\n  }\n}\n"]}