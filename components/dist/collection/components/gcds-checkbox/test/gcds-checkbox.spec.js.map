{"version":3,"file":"gcds-checkbox.spec.js","sourceRoot":"","sources":["../../../../src/components/gcds-checkbox/test/gcds-checkbox.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;EAC7B,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;IACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;MAC1B,IAAI,EAAE;;;;0BAIc;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;KAO7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;IACxC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;MAC1B,IAAI,EAAE;;;;;;0BAMc;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;KAO7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;IAC/B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;MAC1B,IAAI,EAAE;;;;;0BAKc;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQ7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;IACxC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;MAC1B,IAAI,EAAE;;;;;0BAKc;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQ7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,EAAE,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;IAChC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;MAC1B,IAAI,EAAE;;;;;0BAKc;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;KAO7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GcdsCheckbox } from '../gcds-checkbox';\n\ndescribe('gcds-checkbox', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [GcdsCheckbox],\n      html: `<gcds-checkbox\n          label=\"checkbox\"\n          name=\"checkbox\"\n          checkbox-id=\"checkbox\"\n        ></gcds-checkbox>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-checkbox checkbox-id=\"checkbox\" label=\"checkbox\" name=\"checkbox\">\n        <div class=\"gcds-checkbox\">\n           <input id=\"checkbox\" name=\"checkbox\" type=\"checkbox\">\n           <gcds-label label=\"checkbox\" label-for=\"checkbox\" lang=\"en\"></gcds-label>\n         </div>\n      </gcds-checkbox>\n    `);\n  });\n  it('renders checked w/ value', async () => {\n    const page = await newSpecPage({\n      components: [GcdsCheckbox],\n      html: `<gcds-checkbox\n          label=\"checkbox\"\n          name=\"checkbox\"\n          checkbox-id=\"checkbox\"\n          value=\"terms\"\n          checked\n        ></gcds-checkbox>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-checkbox checkbox-id=\"checkbox\" checked=\"\" label=\"checkbox\" name=\"checkbox\" value=\"terms\">\n        <div class=\"gcds-checkbox\">\n           <input checked=\"\" id=\"checkbox\" name=\"checkbox\" type=\"checkbox\" value=\"terms\">\n           <gcds-label label=\"checkbox\" label-for=\"checkbox\" lang=\"en\"></gcds-label>\n         </div>\n      </gcds-checkbox>\n    `);\n  });\n  it('renders w/ hint', async () => {\n    const page = await newSpecPage({\n      components: [GcdsCheckbox],\n      html: `<gcds-checkbox\n          label=\"checkbox\"\n          name=\"checkbox\"\n          checkbox-id=\"checkbox\"\n          hint=\"this is a hint\"\n        ></gcds-checkbox>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-checkbox checkbox-id=\"checkbox\" hint=\"this is a hint\" label=\"checkbox\" name=\"checkbox\">\n        <div class=\"gcds-checkbox\">\n           <input aria-describedby=\"hint-checkbox \" id=\"checkbox\" name=\"checkbox\" type=\"checkbox\">\n           <gcds-label label=\"checkbox\" label-for=\"checkbox\" lang=\"en\"></gcds-label>\n           <gcds-hint hint=\"this is a hint\" hint-id=\"checkbox\"></gcds-hint>\n         </div>\n      </gcds-checkbox>\n    `);\n  });\n  it('renders w/ error message', async () => {\n    const page = await newSpecPage({\n      components: [GcdsCheckbox],\n      html: `<gcds-checkbox\n          label=\"checkbox\"\n          name=\"checkbox\"\n          checkbox-id=\"checkbox\"\n          error-message=\"This needs to be checked\"\n        ></gcds-checkbox>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-checkbox checkbox-id=\"checkbox\" error-message=\"This needs to be checked\" label=\"checkbox\" name=\"checkbox\">\n        <div class=\"gcds-checkbox gcds-checkbox--error\">\n           <input aria-describedby=\"error-message-checkbox \" aria-invalid=\"true\" id=\"checkbox\" name=\"checkbox\" type=\"checkbox\">\n           <gcds-label label=\"checkbox\" label-for=\"checkbox\" lang=\"en\"></gcds-label>\n           <gcds-error-message message=\"This needs to be checked\" messageId=\"checkbox\"></gcds-error-message>\n         </div>\n      </gcds-checkbox>\n    `);\n  });\n  it('renders disabled', async () => {\n    const page = await newSpecPage({\n      components: [GcdsCheckbox],\n      html: `<gcds-checkbox\n          label=\"checkbox\"\n          name=\"checkbox\"\n          checkbox-id=\"checkbox\"\n          disabled\n        ></gcds-checkbox>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <gcds-checkbox checkbox-id=\"checkbox\" disabled=\"\" error-message=\"\" label=\"checkbox\" name=\"checkbox\">\n        <div class=\"gcds-checkbox gcds-checkbox--disabled\">\n           <input disabled=\"\" id=\"checkbox\" name=\"checkbox\" type=\"checkbox\">\n           <gcds-label label=\"checkbox\" label-for=\"checkbox\" lang=\"en\"></gcds-label>\n         </div>\n      </gcds-checkbox>\n    `);\n  });\n});\n"]}