{"version":3,"file":"gcds-checkbox.js","sourceRoot":"","sources":["../../../src/components/gcds-checkbox/gcds-checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Listen,\n  Method,\n  State,\n  Prop,\n  Watch,\n  Host,\n  h,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  elementGroupCheck,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n} from '../../validators';\n\n@Component({\n  tag: 'gcds-checkbox',\n  styleUrl: 'gcds-checkbox.css',\n  shadow: false,\n  scoped: true,\n})\nexport class GcdsCheckbox {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLElement;\n\n  _validator: Validator<unknown> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Id attribute for an input element.\n   */\n  @Prop({ reflect: true, mutable: true }) checkboxId!: string;\n  /**\n   * Form field label\n   */\n  @Prop({ reflect: true, mutable: false }) label!: string;\n\n  /**\n   * Name attribute for an input element.\n   */\n  @Prop({ reflect: true, mutable: false }) name!: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop({ reflect: true, mutable: false }) required: boolean;\n  /**\n   * Specifies if an input element is disabled or not.\n   */\n  @Prop({ reflect: true, mutable: true }) disabled: boolean;\n\n  @Watch('disabled')\n  validateDisabledCheckbox() {\n    if (this.required) {\n      this.disabled = false;\n    }\n  }\n\n  /**\n   * Value for an input element.\n   */\n  @Prop({ reflect: true, mutable: false }) value: string;\n\n  /**\n   * Specifies if an input element is checked.\n   */\n  @Prop({ reflect: true, mutable: true }) checked: boolean;\n\n  /**\n   * Error message for an invalid input element.\n   */\n  @Prop({ reflect: true, mutable: true }) errorMessage: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Hint displayed below the label.\n   */\n  @Prop({ reflect: true, mutable: false }) hint: string;\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    if (this.validator && !this.validateOn) {\n      this.validateOn = 'blur';\n    }\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other';\n\n  /**\n   * Event listener for gcds-fieldset errors\n   */\n  @Listen('gcdsGroupError', { target: 'body' })\n  gcdsGroupError(e) {\n    if (e.srcElement.contains(this.el) && elementGroupCheck(this.name)) {\n      this.hasError = true;\n      this.parentError = e.detail;\n    } else if (!elementGroupCheck(this.name)) {\n      this.hasError = false;\n      this.parentError = '';\n    }\n  }\n\n  @Listen('gcdsGroupErrorClear', { target: 'body' })\n  gcdsGroupErrorClear(e) {\n    if (e.srcElement.contains(this.el) && this.hasError) {\n      this.hasError = false;\n      this.parentError = '';\n    }\n  }\n\n  /**\n   * Custom callback function on click event\n   */\n  @Prop() clickHandler: Function;\n\n  /**\n   * Custom callback function on focus event\n   */\n  @Prop() focusHandler: Function;\n\n  /**\n   * Custom callback function on blur event\n   */\n  @Prop() blurHandler: Function;\n\n  /**\n   * State to handle when errors are passed down to component\n   */\n  @State() parentError: string;\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Specifies if the checkbox is invalid.\n   */\n  @State() hasError: boolean;\n  @Watch('hasError')\n  validateHasError() {\n    if (this.disabled) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the checkbox has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  private onFocus = e => {\n    if (this.focusHandler) {\n      this.focusHandler(e);\n    }\n\n    this.gcdsFocus.emit();\n  };\n\n  /**\n   * Emitted when the checkbox loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = e => {\n    if (this.blurHandler) {\n      this.blurHandler(e);\n    } else {\n      if (this.validateOn == 'blur') {\n        this.validate();\n      }\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  /**\n   * Update value based on user input.\n   */\n  @Event() gcdsChange: EventEmitter;\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    if (\n      !this._validator.validate(this.checked) &&\n      this._validator.errorMessage\n    ) {\n      this.errorMessage = this._validator.errorMessage[this.lang];\n      this.gcdsError.emit({\n        id: `#${this.checkboxId}`,\n        message: `${this.label} - ${this.errorMessage}`,\n      });\n    } else {\n      this.errorMessage = '';\n      this.gcdsValid.emit({ id: `#${this.checkboxId}` });\n    }\n  }\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsValid!: EventEmitter<object>;\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledCheckbox();\n    this.validateHasError();\n    this.validateErrorMessage();\n    this.validateValidator();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'checkbox');\n\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n  }\n\n  componentWillUpdate() {\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n  }\n\n  private onChange = () => {\n    this.checked = !this.checked;\n\n    this.gcdsChange.emit(this.checked);\n  };\n\n  render() {\n    const {\n      lang,\n      checkboxId,\n      label,\n      name,\n      required,\n      disabled,\n      value,\n      checked,\n      hint,\n      errorMessage,\n      hasError,\n      parentError,\n      inheritedAttributes,\n    } = this;\n\n    const attrsInput = {\n      name,\n      disabled,\n      required,\n      value,\n      checked,\n      ...inheritedAttributes,\n    };\n\n    const attrsLabel = {\n      label,\n      required,\n    };\n\n    if (hint || errorMessage || parentError) {\n      const hintID = hint ? `hint-${checkboxId} ` : '';\n      const errorID = errorMessage ? `error-message-${checkboxId} ` : '';\n      const parentErrorID = parentError ? `parent-error-${checkboxId} ` : '';\n      attrsInput['aria-describedby'] = `${hintID}${errorID}${parentErrorID}${\n        attrsInput['aria-describedby']\n          ? `${attrsInput['aria-describedby']}`\n          : ''\n      }`;\n    }\n\n    if (hasError) {\n      attrsInput['aria-invalid'] = 'true';\n    }\n\n    return (\n      <Host>\n        <div\n          class={`gcds-checkbox ${disabled ? 'gcds-checkbox--disabled' : ''} ${\n            hasError ? 'gcds-checkbox--error' : ''\n          }`}\n        >\n          <input\n            id={checkboxId}\n            type=\"checkbox\"\n            {...attrsInput}\n            onBlur={e => this.onBlur(e)}\n            onFocus={e => this.onFocus(e)}\n            onChange={() => this.onChange()}\n            onClick={e => {\n              this.clickHandler && this.clickHandler(e);\n            }}\n            ref={element => (this.shadowElement = element as HTMLElement)}\n          />\n\n          <gcds-label\n            {...attrsLabel}\n            label-for={checkboxId}\n            lang={lang}\n          ></gcds-label>\n\n          {hint ? <gcds-hint hint={hint} hint-id={checkboxId} /> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={checkboxId} message={errorMessage} />\n          ) : null}\n\n          {parentError ? (\n            <span id={`parent-error-${checkboxId}`} hidden>\n              {parentError}\n            </span>\n          ) : null}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}