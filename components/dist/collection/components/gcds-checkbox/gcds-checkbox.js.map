{"version":3,"file":"gcds-checkbox.js","sourceRoot":"","sources":["../../../src/components/gcds-checkbox/gcds-checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Listen,\n  Method,\n  State,\n  Prop,\n  Watch,\n  Host,\n  h,\n  AttachInternals,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  elementGroupCheck,\n  emitEvent,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n} from '../../validators';\n\n@Component({\n  tag: 'gcds-checkbox',\n  styleUrl: 'gcds-checkbox.css',\n  shadow: { delegatesFocus: true },\n  formAssociated: true,\n})\nexport class GcdsCheckbox {\n  @Element() el: HTMLElement;\n\n  @AttachInternals()\n  internals: ElementInternals;\n\n  private initialState?: boolean;\n\n  private shadowElement?: HTMLElement;\n\n  _validator: Validator<unknown> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Id attribute for an input element.\n   */\n  @Prop({ reflect: true, mutable: true }) checkboxId!: string;\n  /**\n   * Form field label\n   */\n  @Prop({ reflect: true, mutable: false }) label!: string;\n\n  /**\n   * Name attribute for an input element.\n   */\n  @Prop({ reflect: true, mutable: false }) name!: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop({ reflect: true, mutable: false }) required: boolean;\n  /**\n   * Specifies if an input element is disabled or not.\n   */\n  @Prop({ reflect: true, mutable: true }) disabled: boolean;\n\n  @Watch('disabled')\n  validateDisabledCheckbox() {\n    if (this.required) {\n      this.disabled = false;\n    }\n  }\n\n  /**\n   * Value for an input element.\n   */\n  @Prop({ reflect: true, mutable: false }) value: string;\n\n  /**\n   * Specifies if an input element is checked.\n   */\n  @Prop({ reflect: true, mutable: true }) checked: boolean;\n\n  /**\n   * Error message for an invalid input element.\n   */\n  @Prop({ reflect: true, mutable: true }) errorMessage: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Hint displayed below the label.\n   */\n  @Prop({ reflect: true, mutable: false }) hint: string;\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    if (this.validator && !this.validateOn) {\n      this.validateOn = 'blur';\n    }\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other';\n\n  /**\n   * Event listener for gcds-fieldset errors\n   */\n  @Listen('gcdsGroupError', { target: 'body' })\n  gcdsGroupError(e) {\n    if (e.srcElement.contains(this.el) && elementGroupCheck(this.name)) {\n      this.hasError = true;\n      this.parentError = e.detail;\n    } else if (!elementGroupCheck(this.name)) {\n      this.hasError = false;\n      this.parentError = '';\n    }\n  }\n\n  @Listen('gcdsGroupErrorClear', { target: 'body' })\n  gcdsGroupErrorClear(e) {\n    if (e.srcElement.contains(this.el) && this.hasError) {\n      this.hasError = false;\n      this.parentError = '';\n    }\n  }\n\n  /**\n   * State to handle when errors are passed down to component\n   */\n  @State() parentError: string;\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Specifies if the checkbox is invalid.\n   */\n  @State() hasError: boolean;\n  @Watch('hasError')\n  validateHasError() {\n    if (this.disabled) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the checkbox has been clicked.\n   */\n  @Event() gcdsClick!: EventEmitter<void>;\n\n  /**\n   * Emitted when the checkbox has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the checkbox loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = () => {\n    if (this.validateOn == 'blur') {\n      this.validate();\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  /**\n   * Update value based on user input.\n   */\n  @Event() gcdsChange: EventEmitter;\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsValid!: EventEmitter<object>;\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    if (\n      !this._validator.validate(this.checked) &&\n      this._validator.errorMessage\n    ) {\n      this.errorMessage = this._validator.errorMessage[this.lang];\n      this.gcdsError.emit({\n        id: `#${this.checkboxId}`,\n        message: `${this.label} - ${this.errorMessage}`,\n      });\n    } else {\n      this.errorMessage = '';\n      this.gcdsValid.emit({ id: `#${this.checkboxId}` });\n    }\n  }\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /*\n   * Form internal functions\n   */\n  formResetCallback() {\n    if (this.checked != this.initialState) {\n      this.checked = this.initialState;\n    }\n  }\n\n  formStateRestoreCallback(state) {\n    this.internals.setFormValue(state);\n    this.checked = state;\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledCheckbox();\n    this.validateHasError();\n    this.validateErrorMessage();\n    this.validateValidator();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'checkbox');\n\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n\n    this.internals.setFormValue(this.checked ? this.value : null);\n    this.initialState = this.checked ? this.checked : null;\n  }\n\n  componentWillUpdate() {\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n  }\n\n  private onChange = e => {\n    this.checked = !this.checked;\n    this.internals.setFormValue(e.target.value, 'checked');\n\n    if (!this.checked) {\n      this.internals.setFormValue(null, 'checked');\n    }\n\n    const changeEvt = new e.constructor(e.type, e);\n    this.el.dispatchEvent(changeEvt);\n\n    this.gcdsChange.emit(this.checked);\n  };\n\n  render() {\n    const {\n      lang,\n      checkboxId,\n      label,\n      name,\n      required,\n      disabled,\n      value,\n      checked,\n      hint,\n      errorMessage,\n      hasError,\n      parentError,\n      inheritedAttributes,\n    } = this;\n\n    const attrsInput = {\n      name,\n      disabled,\n      required,\n      value,\n      checked,\n      ...inheritedAttributes,\n    };\n\n    const attrsLabel = {\n      label,\n      required,\n    };\n\n    if (hint || errorMessage || parentError) {\n      const hintID = hint ? `hint-${checkboxId} ` : '';\n      const errorID = errorMessage ? `error-message-${checkboxId} ` : '';\n      const parentErrorID = parentError ? `parent-error-${checkboxId} ` : '';\n      attrsInput['aria-describedby'] = `${hintID}${errorID}${parentErrorID}${\n        attrsInput['aria-describedby']\n          ? `${attrsInput['aria-describedby']}`\n          : ''\n      }`;\n    }\n\n    if (hasError) {\n      attrsInput['aria-invalid'] = 'true';\n    }\n\n    return (\n      <Host>\n        <div\n          class={`gcds-checkbox ${disabled ? 'gcds-checkbox--disabled' : ''} ${\n            hasError ? 'gcds-checkbox--error' : ''\n          }`}\n        >\n          <input\n            id={checkboxId}\n            type=\"checkbox\"\n            {...attrsInput}\n            onBlur={() => this.onBlur()}\n            onFocus={() => this.gcdsFocus.emit()}\n            onChange={e => this.onChange(e)}\n            onClick={e => emitEvent(e, this.gcdsClick)}\n            ref={element => (this.shadowElement = element as HTMLElement)}\n          />\n\n          <gcds-label\n            {...attrsLabel}\n            label-for={checkboxId}\n            lang={lang}\n          ></gcds-label>\n\n          {hint ? <gcds-hint hint-id={checkboxId}>{hint}</gcds-hint> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={checkboxId}>\n              {errorMessage}\n            </gcds-error-message>\n          ) : null}\n\n          {parentError ? (\n            <span id={`parent-error-${checkboxId}`} hidden>\n              {parentError}\n            </span>\n          ) : null}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}