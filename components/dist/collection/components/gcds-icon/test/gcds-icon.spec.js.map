{"version":3,"file":"gcds-icon.spec.js","sourceRoot":"","sources":["../../../../src/components/gcds-icon/test/gcds-icon.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GcdsIcon } from '../gcds-icon';\n\ndescribe('gcds-icon', () => {\n  it('renders', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsIcon],\n      html: '<gcds-icon name=\"angle-down\" />',\n    });\n    expect(root).toEqualHtml(`\n      <gcds-icon name=\"angle-down\">\n        <mock:shadow-root>\n          <span aria-hidden=\"true\" role=\"img\" class=\"gcds-icon fa fa-solid fa-angle-down size-text\"></span>\n        </mock:shadow-root>\n      </gcds-icon>\n    `);\n  });\n\n  it('renders margin left', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsIcon],\n      html: '<gcds-icon name=\"angle-down\" margin-left=\"100\" />',\n    });\n    expect(root).toEqualHtml(`\n      <gcds-icon name=\"angle-down\" margin-left=\"100\">\n        <mock:shadow-root>\n          <span aria-hidden=\"true\" role=\"img\" class=\"gcds-icon fa fa-solid fa-angle-down size-text ml-100\"></span>\n        </mock:shadow-root>\n      </gcds-icon>\n    `);\n  });\n\n  it('renders margin right', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsIcon],\n      html: '<gcds-icon name=\"angle-down\" margin-right=\"100\" />',\n    });\n    expect(root).toEqualHtml(`\n      <gcds-icon name=\"angle-down\" margin-right=\"100\">\n        <mock:shadow-root>\n          <span aria-hidden=\"true\" role=\"img\" class=\"gcds-icon fa fa-solid fa-angle-down size-text mr-100\"></span>\n        </mock:shadow-root>\n      </gcds-icon>\n    `);\n  });\n\n  it('renders size', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsIcon],\n      html: '<gcds-icon name=\"angle-down\" size=\"h3\" />',\n    });\n    expect(root).toEqualHtml(`\n      <gcds-icon name=\"angle-down\" size=\"h3\">\n        <mock:shadow-root>\n          <span aria-hidden=\"true\" role=\"img\" class=\"gcds-icon fa fa-solid fa-angle-down size-h3\"></span>\n        </mock:shadow-root>\n      </gcds-icon>\n    `);\n  });\n\n  it('renders hidden for screen readers', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsIcon],\n      html: '<gcds-icon name=\"angle-down\" />',\n    });\n    expect(root).toEqualHtml(`\n      <gcds-icon name=\"angle-down\">\n        <mock:shadow-root>\n          <span aria-hidden=\"true\" role=\"img\" class=\"gcds-icon fa fa-solid fa-angle-down size-text\"></span>\n        </mock:shadow-root>\n      </gcds-icon>\n    `);\n  });\n\n  it('renders with label', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsIcon],\n      html: '<gcds-icon name=\"angle-down\" label=\"This is a description\" />',\n    });\n    expect(root).toEqualHtml(`\n      <gcds-icon name=\"angle-down\" label=\"This is a description\">\n        <mock:shadow-root>\n          <span aria-hidden=\"false\" aria-label=\"This is a description\" role=\"img\" class=\"gcds-icon fa fa-solid fa-angle-down size-text\"></span>\n        </mock:shadow-root>\n      </gcds-icon>\n    `);\n  });\n\n  it('renders icon style', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsIcon],\n      html: '<gcds-icon name=\"angle-down\" size=\"h3\" icon-style=\"regular\"/>',\n    });\n    expect(root).toEqualHtml(`\n      <gcds-icon name=\"angle-down\" size=\"h3\" icon-style=\"regular\">\n        <mock:shadow-root>\n          <span aria-hidden=\"true\" role=\"img\" class=\"gcds-icon fa fa-regular fa-angle-down size-h3\"></span>\n        </mock:shadow-root>\n      </gcds-icon>\n    `);\n  });\n\n  it('renders fixed width icons', async () => {\n    const { root } = await newSpecPage({\n      components: [GcdsIcon],\n      html: '<gcds-icon name=\"angle-down\" size=\"h3\" fixed-width/>',\n    });\n    expect(root).toEqualHtml(`\n      <gcds-icon name=\"angle-down\" size=\"h3\" fixed-width>\n        <mock:shadow-root>\n          <span aria-hidden=\"true\" role=\"img\" class=\"gcds-icon fa fa-solid fa-angle-down size-h3 fixed-width\"></span>\n        </mock:shadow-root>\n      </gcds-icon>\n    `);\n  });\n});\n"]}