{"version":3,"file":"gcds-icon.js","sourceRoot":"","sources":["../../../src/components/gcds-icon/gcds-icon.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAOlE,MAAM,OAAO,QAAQ;;yBAUuB,OAAO;;;;;0BAyDnB,KAAK;oBAcxB,MAAM;;IAEjB,MAAM;QACJ,MAAM,EACJ,SAAS,EACT,KAAK,EACL,UAAU,EACV,WAAW,EACX,IAAI,EACJ,UAAU,EACV,IAAI,GACL,GAAG,IAAI,CAAC;QAET,OAAO,CACL,EAAC,IAAI;YACH,6DACE,KAAK,EAAE;8BACa,SAAS,OAAO,IAAI;cACpC,UAAU,CAAC,CAAC,CAAC,MAAM,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE;cACpC,WAAW,CAAC,CAAC,CAAC,MAAM,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;cACtC,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;cAC1B,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;WAClC,EACD,IAAI,EAAC,KAAK,gBACE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,iBACpB,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,GAC/B,CACH,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'gcds-icon',\n  styleUrl: 'gcds-icon.scss',\n  shadow: true,\n})\nexport class GcdsIcon {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Style of the icon. 'regular' icons are outlined. Some icons have 'solid' variation.\n   */\n  @Prop() iconStyle?: 'regular' | 'solid' = 'solid';\n\n  /**\n   * Add icon description.\n   */\n  @Prop() label?: string;\n\n  /**\n   * Add margin to the left of the icon\n   */\n  @Prop() marginLeft?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000';\n\n  /**\n   * Add margin to the right of the icon\n   */\n  @Prop() marginRight?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000';\n\n  /**\n   * Name of the icon.\n   */\n  @Prop() name!: string;\n\n  /**\n   * If the icon should render as a fixed-width square, or their natural width.\n   */\n  @Prop() fixedWidth: boolean = false;\n\n  /**\n   * Defines the size of the icon.\n   */\n  @Prop() size?:\n    | 'inherit'\n    | 'caption'\n    | 'text'\n    | 'h6'\n    | 'h5'\n    | 'h4'\n    | 'h3'\n    | 'h2'\n    | 'h1' = 'text';\n\n  render() {\n    const {\n      iconStyle,\n      label,\n      marginLeft,\n      marginRight,\n      name,\n      fixedWidth,\n      size,\n    } = this;\n\n    return (\n      <Host>\n        <span\n          class={`\n            gcds-icon fa fa-${iconStyle} fa-${name}\n            ${marginLeft ? `ml-${marginLeft}` : ''}\n            ${marginRight ? `mr-${marginRight}` : ''}\n            ${size ? `size-${size}` : ''}\n            ${fixedWidth ? `fixed-width` : ''}\n          `}\n          role=\"img\"\n          aria-label={label ? label : false}\n          aria-hidden={label ? 'false' : 'true'}\n        ></span>\n      </Host>\n    );\n  }\n}\n"]}