{"version":3,"file":"input-validators.js","sourceRoot":"","sources":["../../../src/validators/input-validators/input-validators.ts"],"names":[],"mappings":"AAEA,MAAM,YAAY,GAChB,uJAAuJ,CAAC;AAE1J,MAAM,CAAC,MAAM,aAAa,GAAsB;EAC9C,QAAQ,EAAE,CAAC,KAAa,EAAE,EAAE,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE;EAChE,YAAY,EAAE;IACZ,EAAE,EAAE,gCAAgC;IACpC,EAAE,EAAE,8CAA8C;GACnD;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAsB;EACnD,QAAQ,EAAE,CAAC,KAAa,EAAE,EAAE,CAC1B,KAAK,IAAI,IAAI;IACb,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE;IAClB,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;EAC1D,YAAY,EAAE;IACZ,EAAE,EAAE,2FAA2F;IAC/F,EAAE,EAAE,wGAAwG;GAC7G;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAwB;EACpD,QAAQ,EAAE,CAAC,KAAe,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;EAC/C,YAAY,EAAE;IACZ,EAAE,EAAE,qCAAqC;IACzC,EAAE,EAAE,kDAAkD;GACvD;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAsB;EACpD,QAAQ,EAAE,CAAC,KAAa,EAAE,EAAE,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE;EAChE,YAAY,EAAE;IACZ,EAAE,EAAE,+BAA+B;IACnC,EAAE,EAAE,uCAAuC;GAC5C;CACF,CAAC","sourcesContent":["import { Validator } from '../validator';\n\nconst emailPattern =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const requiredField: Validator<string> = {\n  validate: (value: string) => value != null && value.trim() != '',\n  errorMessage: {\n    en: 'Enter information to continue.',\n    fr: 'Saisissez des renseignements pour continuer.',\n  },\n};\n\nexport const requiredEmailField: Validator<string> = {\n  validate: (value: string) =>\n    value != null &&\n    value.trim() != '' &&\n    (value.toLowerCase().match(emailPattern) ? true : false),\n  errorMessage: {\n    en: 'Enter a valid email address to continue. Use a standard format. Example: name@address.ca.',\n    fr: 'Saisissez votre adresse courriel pour continuer. Utilisez un format standard. Exemple: nom@adresse.ca.',\n  },\n};\n\nexport const requiredFileInput: Validator<FileList> = {\n  validate: (value: FileList) => value.length > 0,\n  errorMessage: {\n    en: 'You must upload a file to continue.',\n    fr: 'Vous devez téléverser un fichier pour continuer.',\n  },\n};\n\nexport const requiredSelectField: Validator<string> = {\n  validate: (value: string) => value != null && value.trim() != '',\n  errorMessage: {\n    en: 'Choose an option to continue.',\n    fr: 'Choisissez une option pour continuer.',\n  },\n};\n"]}