{"file":"gcds-text2.js","mappings":"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","names":[],"sources":["src/components/gcds-text/gcds-text.css?tag=gcds-text&encapsulation=shadow","src/components/gcds-text/gcds-text.tsx"],"sourcesContent":["@layer reset, default, display, limit, margin, role, size, style, weight;\n\n@layer reset {\n  :host {\n    display: block;\n    color: var(--gcds-text-role-primary);\n\n    .gcds-text {\n      display: inherit;\n      box-sizing: border-box;\n      margin: 0;\n\n      slot {\n        display: initial;\n      }\n    }\n  }\n}\n\n@layer default {\n  :host .gcds-text {\n    font: var(--gcds-text-size-body-desktop);\n\n    @media only screen and (width < 48em) {\n      font: var(--gcds-text-size-body-mobile);\n    }\n  }\n}\n\n@layer display {\n  :host {\n    &.d-block {\n      display: block;\n    }\n\n    &.d-flex {\n      display: flex;\n    }\n\n    &.d-inline {\n      display: inline;\n    }\n\n    &.d-inline-block {\n      display: inline-block;\n    }\n\n    &.d-inline-flex {\n      display: inline-flex;\n    }\n\n    &.d-none {\n      display: none;\n    }\n  }\n}\n\n@layer limit {\n  :host .gcds-text.limit {\n    max-width: var(--gcds-text-character-limit);\n  }\n}\n\n@layer margin {\n  :host .gcds-text {\n    /* Margin top */\n    &.mt-0 {\n      margin-block-start: var(--gcds-text-spacing-0);\n    }\n\n    &.mt-50 {\n      margin-block-start: var(--gcds-text-spacing-50);\n    }\n\n    &.mt-100 {\n      margin-block-start: var(--gcds-text-spacing-100);\n    }\n\n    &.mt-150 {\n      margin-block-start: var(--gcds-text-spacing-150);\n    }\n\n    &.mt-200 {\n      margin-block-start: var(--gcds-text-spacing-200);\n    }\n\n    &.mt-250 {\n      margin-block-start: var(--gcds-text-spacing-250);\n    }\n\n    &.mt-300 {\n      margin-block-start: var(--gcds-text-spacing-300);\n    }\n\n    &.mt-400 {\n      margin-block-start: var(--gcds-text-spacing-400);\n    }\n\n    &.mt-450 {\n      margin-block-start: var(--gcds-text-spacing-450);\n    }\n\n    &.mt-500 {\n      margin-block-start: var(--gcds-text-spacing-500);\n    }\n\n    &.mt-550 {\n      margin-block-start: var(--gcds-text-spacing-550);\n    }\n\n    &.mt-600 {\n      margin-block-start: var(--gcds-text-spacing-600);\n    }\n\n    &.mt-700 {\n      margin-block-start: var(--gcds-text-spacing-700);\n    }\n\n    &.mt-800 {\n      margin-block-start: var(--gcds-text-spacing-800);\n    }\n\n    &.mt-900 {\n      margin-block-start: var(--gcds-text-spacing-900);\n    }\n\n    &.mt-1000 {\n      margin-block-start: var(--gcds-text-spacing-1000);\n    }\n\n    /* Margin bottom */\n    &.mb-0 {\n      margin-block-end: var(--gcds-text-spacing-0);\n    }\n\n    &.mb-50 {\n      margin-block-end: var(--gcds-text-spacing-50);\n    }\n\n    &.mb-100 {\n      margin-block-end: var(--gcds-text-spacing-100);\n    }\n\n    &.mb-150 {\n      margin-block-end: var(--gcds-text-spacing-150);\n    }\n\n    &.mb-200 {\n      margin-block-end: var(--gcds-text-spacing-200);\n    }\n\n    &.mb-250 {\n      margin-block-end: var(--gcds-text-spacing-250);\n    }\n\n    &.mb-300 {\n      margin-block-end: var(--gcds-text-spacing-300);\n    }\n\n    &.mb-400 {\n      margin-block-end: var(--gcds-text-spacing-400);\n    }\n\n    &.mb-450 {\n      margin-block-end: var(--gcds-text-spacing-450);\n    }\n\n    &.mb-500 {\n      margin-block-end: var(--gcds-text-spacing-500);\n    }\n\n    &.mb-550 {\n      margin-block-end: var(--gcds-text-spacing-550);\n    }\n\n    &.mb-600 {\n      margin-block-end: var(--gcds-text-spacing-600);\n    }\n\n    &.mb-700 {\n      margin-block-end: var(--gcds-text-spacing-700);\n    }\n\n    &.mb-800 {\n      margin-block-end: var(--gcds-text-spacing-800);\n    }\n\n    &.mb-900 {\n      margin-block-end: var(--gcds-text-spacing-900);\n    }\n\n    &.mb-1000 {\n      margin-block-end: var(--gcds-text-spacing-1000);\n    }\n  }\n}\n\n@layer variants.role {\n  :host .gcds-text {\n    &.role-primary {\n      color: var(--gcds-text-role-primary);\n    }\n\n    &.role-secondary {\n      color: var(--gcds-text-role-secondary);\n    }\n\n    &.role-light {\n      color: var(--gcds-text-role-light);\n    }\n  }\n}\n\n@layer variants.size {\n  :host .gcds-text :is(small, ::slotted(small)) {\n    font: var(--gcds-text-size-caption-desktop);\n\n    @media only screen and (width < 48em) {\n      font: var(--gcds-text-size-caption-mobile);\n    }\n  }\n}\n\n@layer variants.style {\n  :host .gcds-text ::slotted(em) {\n    font-style: italic;\n  }\n}\n\n@layer variants.weight {\n  :host .gcds-text ::slotted(strong) {\n    font-weight: var(--gcds-text-weight-bold);\n  }\n}\n","import { Component, Element, Host, Watch, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'gcds-text',\n  styleUrl: 'gcds-text.css',\n  shadow: true,\n})\nexport class GcdsText {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Sets the main style of the text.\n   */\n  @Prop({ mutable: true }) textRole?: 'light' | 'primary' | 'secondary' =\n    'primary';\n\n  @Watch('textRole')\n  validateTextRole(newValue: string) {\n    const values = ['light', 'primary', 'secondary'];\n\n    if (!values.includes(newValue)) {\n      this.textRole = 'primary';\n    }\n  }\n\n  /**\n   * Sets the line length to a maximum amount of characters per line to ensure a comfortable, accessible reading length.\n   */\n  @Prop() characterLimit?: boolean = true;\n\n  /**\n   * Specifies the display behaviour of the text.\n   */\n  @Prop({ mutable: true }) display?:\n    | 'block'\n    | 'flex'\n    | 'inline'\n    | 'inline-block'\n    | 'inline-flex'\n    | 'none' = 'block';\n\n  @Watch('display')\n  validateDisplay(newValue: string) {\n    const values = [\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'none',\n    ];\n\n    if (!values.includes(newValue)) {\n      this.display = 'block';\n    }\n  }\n\n  /**\n   * Adds margin above the text.\n   */\n  @Prop({ mutable: true }) marginTop?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000' = '0';\n\n  @Watch('marginTop')\n  validateMarginTop(newValue: string) {\n    const values = [\n      '0',\n      '50',\n      '100',\n      '150',\n      '200',\n      '250',\n      '300',\n      '400',\n      '450',\n      '500',\n      '550',\n      '600',\n      '700',\n      '800',\n      '900',\n      '1000',\n    ];\n\n    if (!values.includes(newValue)) {\n      this.marginTop = '0';\n    }\n  }\n\n  /**\n   * Adds margin below the text.\n   */\n  @Prop({ mutable: true }) marginBottom?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000' = '400';\n\n  @Watch('marginBottom')\n  validateMarginBottom(newValue: string) {\n    const values = [\n      '0',\n      '50',\n      '100',\n      '150',\n      '200',\n      '250',\n      '300',\n      '400',\n      '450',\n      '500',\n      '550',\n      '600',\n      '700',\n      '800',\n      '900',\n      '1000',\n    ];\n\n    if (!values.includes(newValue)) {\n      this.marginBottom = '400';\n    }\n  }\n\n  /**\n   * Sets the appropriate HTML tags for the selected size.\n   */\n  @Prop({ mutable: true }) size?: 'body' | 'caption' = 'body';\n\n  @Watch('size')\n  validateSize(newValue: string) {\n    const values = ['body', 'caption'];\n\n    if (!values.includes(newValue)) {\n      this.size = 'body';\n    }\n  }\n\n  componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateTextRole(this.textRole);\n    this.validateDisplay(this.display);\n    this.validateMarginTop(this.marginTop);\n    this.validateMarginBottom(this.marginBottom);\n    this.validateSize(this.size);\n  }\n\n  render() {\n    const { characterLimit, display, marginTop, marginBottom, size, textRole } =\n      this;\n\n    return (\n      <Host class={`${display != 'block' ? `d-${display}` : ''}`}>\n        <p\n          class={`\n            gcds-text\n            ${textRole ? `role-${textRole}` : ''}\n            ${characterLimit ? 'limit' : ''}\n            ${marginTop ? `mt-${marginTop}` : ''}\n            ${marginBottom ? `mb-${marginBottom}` : ''}\n          `}\n          part=\"text\"\n        >\n          {size === 'caption' ? (\n            <small>\n              <slot />\n            </small>\n          ) : (\n            <slot />\n          )}\n        </p>\n      </Host>\n    );\n  }\n}\n"],"version":3}