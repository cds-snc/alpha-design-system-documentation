{"file":"gcds-select.js","mappings":"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","names":["GcdsSelect"],"sources":["src/components/gcds-select/gcds-select.css?tag=gcds-select&encapsulation=scoped","src/components/gcds-select/gcds-select.tsx"],"sourcesContent":[":host .gcds-select-wrapper {\n  max-width: 90%;\n  font: var(--gcds-select-font);\n  color: var(--gcds-select-default-text);\n  margin: 0;\n  padding: 0;\n  border: 0;\n  transition: color ease-in-out 0.15s;\n\n  slot {\n    display: initial;\n  }\n\n  &:focus-within {\n    color: var(--gcds-select-focus-text);\n  }\n\n  &.gcds-disabled {\n    color: var(--gcds-select-disabled-text);\n  }\n\n  &.gcds-error:not(:focus-within) select {\n    border-color: var(--gcds-select-danger-border);\n  }\n}\n\n:host select {\n  display: block;\n  min-width: var(--gcds-select-min-width-and-height);\n  max-width: 100%;\n  height: auto;\n  min-height: var(--gcds-select-min-width-and-height);\n  font: inherit;\n  margin: var(--gcds-select-margin);\n  padding: var(--gcds-select-padding);\n  background-color: var(--gcds-select-default-background);\n  color: var(--gcds-select-default-text);\n  border: var(--gcds-select-border-width) solid currentColor;\n  border-radius: var(--gcds-select-border-radius);\n  box-sizing: border-box;\n  transition: all ease-in-out 0.15s;\n\n  /* Select arrow */\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-image: url(\"data:image/svg+xml;utf8,<svg width='16' height='10' viewBox='0 0 16 10' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M0.799988 0.900024L7.79999 7.90003L14.8 0.900024' stroke='currentColor' stroke-width='2'/></svg>\");\n  background-repeat: no-repeat;\n  background-position-x: var(--gcds-select-arrow-position-x);\n  background-position-y: 50%;\n\n  &:focus {\n    border-color: var(--gcds-select-focus-text);\n    outline: var(--gcds-select-outline-width) solid\n      var(--gcds-select-focus-text);\n    outline-offset: var(--gcds-select-border-width);\n    box-shadow: var(--gcds-select-focus-box-shadow);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    background-color: var(--gcds-select-disabled-background);\n    border-color: var(--gcds-select-disabled-text);\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Prop,\n  Watch,\n  State,\n  Method,\n  Host,\n  h,\n  Listen,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n} from '../../validators';\n\n@Component({\n  tag: 'gcds-select',\n  styleUrl: 'gcds-select.css',\n  shadow: false,\n  scoped: true,\n})\nexport class GcdsSelect {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLElement;\n\n  _validator: Validator<string> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Id attribute for a select element.\n   */\n  @Prop({ reflect: true, mutable: true }) selectId!: string;\n\n  /**\n   * Form field label.\n   */\n  @Prop({ reflect: true, mutable: false }) label!: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop({ reflect: true, mutable: false }) required?: boolean = false;\n\n  /**\n   * Specifies if a select element is disabled or not.\n   */\n  @Prop({ reflect: true, mutable: true }) disabled?: boolean = false;\n\n  @Watch('disabled')\n  validateDisabledSelect() {\n    if (this.required) {\n      this.disabled = false;\n    }\n  }\n\n  /**\n   * The default value is an optional value that gets displayed before the user selects an option.\n   */\n  @Prop({ reflect: true, mutable: false }) defaultValue?: string;\n\n  /**\n   * Value for a select element.\n   */\n  @Prop({ mutable: true }) value?: string;\n\n  /**\n   * Error message for an invalid select element.\n   */\n  @Prop({ reflect: true, mutable: true }) errorMessage?: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Hint displayed below the label.\n   */\n  @Prop({ reflect: true, mutable: false }) hint?: string;\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    if (this.validator && !this.validateOn) {\n      this.validateOn = 'blur';\n    }\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other';\n\n  /**\n   * Custom callback function on change event\n   */\n  @Prop() changeHandler: Function;\n\n  /**\n   * Custom callback function on focus event\n   */\n  @Prop() focusHandler: Function;\n\n  /**\n   * Custom callback function on blur event\n   */\n  @Prop() blurHandler: Function;\n\n  /**\n   * Specifies if the select is invalid.\n   */\n  @State() hasError: boolean;\n  @Watch('hasError')\n  validateHasError() {\n    if (this.disabled) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Update value based on user selection.\n   */\n  @Event() gcdsSelectChange: EventEmitter;\n\n  /**\n   * Emitted when the select has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  private onFocus = e => {\n    if (this.focusHandler) {\n      this.focusHandler(e);\n    }\n\n    this.gcdsFocus.emit();\n  };\n\n  /**\n   * Emitted when the select loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = e => {\n    if (this.focusHandler) {\n      this.focusHandler(e);\n    } else {\n      if (this.validateOn == 'blur') {\n        this.validate();\n      }\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    if (!this._validator.validate(this.value) && this._validator.errorMessage) {\n      this.errorMessage = this._validator.errorMessage[this.lang];\n      this.gcdsError.emit({\n        id: `#${this.selectId}`,\n        message: `${this.label} - ${this.errorMessage}`,\n      });\n    } else {\n      this.errorMessage = '';\n      this.gcdsValid.emit({ id: `#${this.selectId}` });\n    }\n  }\n\n  /**\n   * Emitted when the select has a validation error.\n   */\n  @Event() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the select has a validation error.\n   */\n  @Event() gcdsValid!: EventEmitter<object>;\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  handleChange = e => {\n    if (this.changeHandler) {\n      this.changeHandler(e);\n    } else {\n      const val = e.target && e.target.value;\n      this.value = val;\n    }\n\n    this.gcdsSelectChange.emit(this.value);\n  };\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledSelect();\n    this.validateHasError();\n    this.validateErrorMessage();\n    this.validateValidator();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'select');\n\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n  }\n\n  componentWillUpdate() {\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n  }\n\n  render() {\n    const {\n      lang,\n      selectId,\n      label,\n      required,\n      disabled,\n      defaultValue,\n      value,\n      hint,\n      errorMessage,\n      inheritedAttributes,\n      hasError,\n    } = this;\n\n    const attrsSelect = {\n      disabled,\n      required,\n      value,\n      ...inheritedAttributes,\n    };\n\n    const attrsLabel = {\n      label,\n      required,\n    };\n\n    if (hint || errorMessage) {\n      const hintID = hint ? `hint-${selectId} ` : '';\n      const errorID = errorMessage ? `error-message-${selectId} ` : '';\n\n      attrsSelect['aria-describedby'] = `${hintID}${errorID}${\n        attrsSelect['aria-describedby']\n          ? `${attrsSelect['aria-describedby']}`\n          : ''\n      }`;\n    }\n\n    return (\n      <Host>\n        <div\n          class={`gcds-select-wrapper ${disabled ? 'gcds-disabled' : ''} ${\n            hasError ? 'gcds-error' : ''\n          }`}\n        >\n          <gcds-label {...attrsLabel} label-for={selectId} lang={lang} />\n\n          {hint ? <gcds-hint hint={hint} hint-id={selectId} /> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={selectId} message={errorMessage} />\n          ) : null}\n\n          <select\n            {...attrsSelect}\n            id={selectId}\n            name={selectId}\n            onBlur={e => this.onBlur(e)}\n            onFocus={e => this.onFocus(e)}\n            onChange={e => this.handleChange(e)}\n            aria-invalid={hasError ? 'true' : 'false'}\n            ref={element => (this.shadowElement = element as HTMLElement)}\n          >\n            {defaultValue ? (\n              <option value=\"\" disabled selected>\n                {defaultValue}\n              </option>\n            ) : null}\n\n            <slot></slot>\n          </select>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}