{"file":"gcds-date-modified.js","mappings":";;;AAAA,MAAM,IAAI,GAAG;AACb,EAAE,EAAE,EAAE;AACN,IAAI,IAAI,EAAE,gBAAgB;AAC1B,GAAG;AACH,EAAE,EAAE,EAAE;AACN,IAAI,IAAI,EAAE,wBAAwB;AAClC,GAAG;AACH,CAAC;;ACPD,MAAM,mBAAmB,GAAG,ifAAif,CAAC;AAC9gB,+BAAe,mBAAmB;;MCSrBA,kBAAgB;;;;oBAUyB,MAAM;;;;;;IAU1D,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS;YAC7C,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;gBACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;aAC1B;SACF,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;KAC3C;IAED,MAAM,iBAAiB;;QAErB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAE5B,QACE,EAAC,IAAI,QACH,UAAI,KAAK,EAAC,oBAAoB,IAC5B,cAAK,IAAI,KAAK,SAAS,GAAG,UAAU,GAAGC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAM,EAC5D,cACG,IAAI,KAAK,SAAS,IACjB,eAAa,KAEb,gBACE,eAAa,CACR,CACR,CACE,CACF,CACA,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["GcdsDateModified","i18n"],"sources":["src/components/gcds-date-modified/i18n/i18n.js","src/components/gcds-date-modified/gcds-date-modified.css?tag=gcds-date-modified&encapsulation=scoped","src/components/gcds-date-modified/gcds-date-modified.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    term: 'Date modified:',\n  },\n  fr: {\n    term: 'Date de modification :',\n  },\n};\n\nexport default I18N;\n",":host {\n  display: block;\n  font: var(--gcds-date-modified-font);\n  color: var(--gcds-date-modified-text);\n  margin: var(--gcds-date-modified-margin);\n\n  .gcds-date-modified {\n    dt,\n    dd {\n      display: inline;\n    }\n\n    dd {\n      margin: var(--gcds-date-modified-description-margin);\n    }\n  }\n\n}\n","import { Component, Element, Host, Prop, State, h } from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-date-modified',\n  styleUrl: 'gcds-date-modified.css',\n  shadow: false,\n  scoped: true,\n})\nexport class GcdsDateModified {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Set date modified type. Default is date.\n   */\n  @Prop({ mutable: true }) type: 'date' | 'version' = 'date';\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const { lang, type } = this;\n\n    return (\n      <Host>\n        <dl class=\"gcds-date-modified\">\n          <dt>{type === 'version' ? 'Version ' : i18n[lang].term}</dt>\n          <dd>\n            {type === 'version' ? (\n              <slot></slot>\n            ) : (\n              <time>\n                <slot></slot>\n              </time>\n            )}\n          </dd>\n        </dl>\n      </Host>\n    );\n  }\n}\n"],"version":3}