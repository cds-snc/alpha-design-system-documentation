{"file":"gcds-container2.js","mappings":";;AAAA,MAAM,gBAAgB,GAAG,01FAA01F;;MCOt2F,aAAa;;;;;kBAUG,KAAK;oBAKH,KAAK;;;gBA+CyB,MAAM;eAK1C,KAAK;;EAE5B,MAAM;IACJ,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAE9D,MAAM,GAAG,GAAG,GAAG,CAAC;IAEhB,QACE,EAAC,IAAI,QACH,EAAC,GAAG,IACF,KAAK,EAAE;;cAEH,MAAM,GAAG,kBAAkB,GAAG,EAAE;cAChC,QAAQ,GAAG,oBAAoB,GAAG,EAAE;cACpC,MAAM,GAAG,KAAK,MAAM,EAAE,GAAG,EAAE;cAC3B,OAAO,GAAG,KAAK,OAAO,EAAE,GAAG,EAAE;cAC7B,IAAI,GAAG,QAAQ,IAAI,EAAE,GAAG,EAAE;WAC7B,IAED,eAAQ,CACJ,CACD,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/gcds-container/gcds-container.css?tag=gcds-container&encapsulation=shadow","src/components/gcds-container/gcds-container.tsx"],"sourcesContent":[":host .gcds-container {\n  display: block;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n\n  slot {\n    display: initial;\n  }\n\n  /* Container border */\n  &.container-border {\n    border: var(--gcds-container-border);\n  }\n\n  /* Container centered */\n  &.container-centered {\n    margin-inline: auto !important;\n  }\n\n  /* Container margin */\n  &.m-0 {\n    margin: var(--gcds-container-spacing-0);\n  }\n\n  &.m-50 {\n    margin: var(--gcds-container-spacing-50);\n  }\n\n  &.m-100 {\n    margin: var(--gcds-container-spacing-100);\n  }\n\n  &.m-150 {\n    margin: var(--gcds-container-spacing-150);\n  }\n\n  &.m-200 {\n    margin: var(--gcds-container-spacing-200);\n  }\n\n  &.m-250 {\n    margin: var(--gcds-container-spacing-250);\n  }\n\n  &.m-300 {\n    margin: var(--gcds-container-spacing-300);\n  }\n\n  &.m-400 {\n    margin: var(--gcds-container-spacing-400);\n  }\n\n  &.m-450 {\n    margin: var(--gcds-container-spacing-450);\n  }\n\n  &.m-500 {\n    margin: var(--gcds-container-spacing-500);\n  }\n\n  &.m-550 {\n    margin: var(--gcds-container-spacing-550);\n  }\n\n  &.m-600 {\n    margin: var(--gcds-container-spacing-600);\n  }\n\n  &.m-700 {\n    margin: var(--gcds-container-spacing-700);\n  }\n\n  &.m-800 {\n    margin: var(--gcds-container-spacing-800);\n  }\n\n  &.m-900 {\n    margin: var(--gcds-container-spacing-900);\n  }\n\n  &.m-1000 {\n    margin: var(--gcds-container-spacing-1000);\n  }\n\n  /* Container padding */\n  &.p-0 {\n    padding: var(--gcds-container-spacing-0);\n  }\n\n  &.p-50 {\n    padding: var(--gcds-container-spacing-50);\n  }\n\n  &.p-100 {\n    padding: var(--gcds-container-spacing-100);\n  }\n\n  &.p-150 {\n    padding: var(--gcds-container-spacing-150);\n  }\n\n  &.p-200 {\n    padding: var(--gcds-container-spacing-200);\n  }\n\n  &.p-250 {\n    padding: var(--gcds-container-spacing-250);\n  }\n\n  &.p-300 {\n    padding: var(--gcds-container-spacing-300);\n  }\n\n  &.p-400 {\n    padding: var(--gcds-container-spacing-400);\n  }\n\n  &.p-450 {\n    padding: var(--gcds-container-spacing-450);\n  }\n\n  &.p-500 {\n    padding: var(--gcds-container-spacing-500);\n  }\n\n  &.p-550 {\n    padding: var(--gcds-container-spacing-550);\n  }\n\n  &.p-600 {\n    padding: var(--gcds-container-spacing-600);\n  }\n\n  &.p-700 {\n    padding: var(--gcds-container-spacing-700);\n  }\n\n  &.p-800 {\n    padding: var(--gcds-container-spacing-800);\n  }\n\n  &.p-900 {\n    padding: var(--gcds-container-spacing-900);\n  }\n\n  &.p-1000 {\n    padding: var(--gcds-container-spacing-1000);\n  }\n\n  /* Container size */\n  &[class*='size'] {\n    width: var(--gcds-container-size-full);\n  }\n\n  &.size-xl {\n    max-width: var(--gcds-container-size-xl);\n  }\n\n  &.size-lg {\n    max-width: var(--gcds-container-size-lg);\n  }\n\n  &.size-md {\n    max-width: var(--gcds-container-size-md);\n  }\n\n  &.size-sm {\n    max-width: var(--gcds-container-size-sm);\n  }\n\n  &.size-xs {\n    max-width: var(--gcds-container-size-xs);\n  }\n}\n","import { Component, Element, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'gcds-container',\n  styleUrl: 'gcds-container.css',\n  shadow: true,\n})\nexport class GcdsContainer {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines if container has a border or not.\n   */\n  @Prop() border?: boolean = false;\n\n  /**\n   * Defines if container is centered or not.\n   */\n  @Prop() centered?: boolean = false;\n\n  /**\n   * Defines the container's margin. Note that left and right margin will not be applied if the container is centered.\n   */\n  @Prop() margin?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000';\n\n  /**\n   *  Defines the container's padding.\n   */\n  @Prop() padding?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000';\n\n  /**\n   * Defines container size.\n   */\n  @Prop() size?: 'full' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' = 'full';\n\n  /**\n   * Set tag for container.\n   */\n  @Prop() tag?: string = 'div';\n\n  render() {\n    const { border, centered, margin, padding, size, tag } = this;\n\n    const Tag = tag;\n\n    return (\n      <Host>\n        <Tag\n          class={`\n            gcds-container\n            ${border ? `container-border` : ''}\n            ${centered ? `container-centered` : ''}\n            ${margin ? `m-${margin}` : ''}\n            ${padding ? `p-${padding}` : ''}\n            ${size ? `size-${size}` : ''}\n          `}\n        >\n          <slot />\n        </Tag>\n      </Host>\n    );\n  }\n}\n"],"version":3}