{"file":"gcds-stepper.js","mappings":";;;;AAAA,MAAM,IAAI,GAAG;AACb,EAAE,EAAE,EAAE;AACN,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,EAAE,EAAE,IAAI;AACZ,GAAG;AACH,EAAE,EAAE,EAAE;AACN,IAAI,IAAI,EAAE,OAAO;AACjB,IAAI,EAAE,EAAE,KAAK;AACb,GAAG;AACH,CAAC;;ACTD,MAAM,cAAc,GAAG,6HAA6H,CAAC;AACrJ,0BAAe,cAAc;;MCQhBA,aAAW;;;;;;;;;;;;IAyBtB,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS;YAC7C,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;gBACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;aAC1B;SACF,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;KAC3C;IAED,MAAM,iBAAiB;;QAErB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,MAAM;QACJ,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QAE/C,QACE,EAAC,IAAI,QACH,oBACE,GAAG,EAAC,IAAI,EACR,KAAK,EAAC,cAAc,gBACT,GAAG,mBACA,KAAK,IAElB,GAAGC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,WAAW,IAAIA,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,UAAU,EAAE,CACtD,CACV,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["GcdsStepper","i18n"],"sources":["src/components/gcds-stepper/i18n/i18n.js","src/components/gcds-stepper/gcds-stepper.css?tag=gcds-stepper&encapsulation=shadow","src/components/gcds-stepper/gcds-stepper.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    step: 'Step',\n    of: 'of',\n  },\n  fr: {\n    step: 'Ã‰tape',\n    of: 'sur',\n  },\n};\n\nexport default I18N;\n","@layer reset, default;\n\n@layer reset {\n  :host {\n    display: block;\n  }\n}\n\n@layer default {\n  :host .gcds-stepper {\n    color: var(--gcds-stepper-text);\n  }\n}\n","import { Component, Element, Host, Prop, State, h } from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-stepper',\n  styleUrl: 'gcds-stepper.css',\n  shadow: true,\n})\nexport class GcdsStepper {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines the current step.\n   */\n  @Prop() currentStep!: number;\n\n  /**\n   * Defines the total amount of steps.\n   */\n  @Prop() totalSteps!: number;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const { currentStep, lang, totalSteps } = this;\n\n    return (\n      <Host>\n        <gcds-heading\n          tag=\"h6\"\n          class=\"gcds-stepper\"\n          margin-top=\"0\"\n          margin-bottom=\"300\"\n        >\n          {`${i18n[lang].step} ${currentStep} ${i18n[lang].of} ${totalSteps}`}\n        </gcds-heading>\n      </Host>\n    );\n  }\n}\n"],"version":3}