{"file":"utils.js","mappings":"MAIa,iBAAiB,GAAG,CAC/B,EAAe,EACf,aAA0B,EAC1B,aAAuB,EAAE;IAEzB,MAAM,eAAe,GAAG,EAAE,CAAC;;IAG3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7C,MAAM,IAAI,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC9D,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/B;KACF;;IAGD,UAAU,CAAC,OAAO,CAAC,IAAI;QACrB,IACE,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC;aACpB,aAAa,IAAI,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EACnD;YACA,MAAM,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxE,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,eAAe,CAAC,IAAI,CAAC;oBACnB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aAC7D;YACD,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC1B;KACF,CAAC,CAAC;IAEH,OAAO,eAAe,CAAC;AACzB,EAAE;MAEW,cAAc,GAAG,CAAC,EAAe;IAC5C,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;QAC5B,IACE,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,IAAI;YACrD,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,EAC9C;YACA,IAAI,GAAG,IAAI,CAAC;SACb;aAAM;YACL,IAAI,GAAG,IAAI,CAAC;SACb;KACF;SAAM,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE;QAC1C,IAAI,GAAG,IAAI,CAAC;KACb;SAAM;QACL,IAAI,GAAG,IAAI,CAAC;KACb;IAED,OAAO,IAAI,CAAC;AACd,EAAE;MAEW,cAAc,GAAG;IAC5B,UAAU,EAAE,IAAI;IAChB,iBAAiB,EAAE,IAAI;IACvB,eAAe,EAAE,CAAC,MAAM,CAAC;EACzB;AAEF;MACa,iBAAiB,GAAG,IAAI;IACnC,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CACvC,cAAc,IAAI,GAAG,CACtB,CAAC;IACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;YACtB,QAAQ,GAAG,IAAI,CAAC;SACjB;KACF;IACD,OAAO,CAAC,QAAQ,CAAC;AACnB;;;;","names":[],"sources":["src/utils/utils.ts"],"sourcesContent":["export function format(label: string): string {\n  return label ? ` ${label}` : 'Fallback Button Label';\n}\n\nexport const inheritAttributes = (\n  el: HTMLElement,\n  shadowElement: HTMLElement,\n  attributes: string[] = [],\n) => {\n  const attributeObject = {};\n\n  // Check for any aria or data attributes\n  for (let i = 0; i < el.attributes.length; i++) {\n    const attr = el.attributes[i];\n    if (attr.name.includes('aria-') || attr.name.includes('data-')) {\n      attributeObject[attr.name] = attr.value;\n      el.removeAttribute(attr.name);\n    }\n  }\n\n  // Check for attributes defined by component\n  attributes.forEach(attr => {\n    if (\n      el.hasAttribute(attr) ||\n      (shadowElement && shadowElement.hasAttribute(attr))\n    ) {\n      const value = el.getAttribute(attr) || shadowElement.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] =\n          el.getAttribute(attr) || shadowElement.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n\n  return attributeObject;\n};\n\nexport const assignLanguage = (el: HTMLElement) => {\n  let lang = '';\n  if (!el.getAttribute('lang')) {\n    if (\n      document.documentElement.getAttribute('lang') == 'en' ||\n      !document.documentElement.getAttribute('lang')\n    ) {\n      lang = 'en';\n    } else {\n      lang = 'fr';\n    }\n  } else if (el.getAttribute('lang') == 'en') {\n    lang = 'en';\n  } else {\n    lang = 'fr';\n  }\n\n  return lang;\n};\n\nexport const observerConfig = {\n  attributes: true,\n  attributeOldValue: true,\n  attributeFilter: ['lang'],\n};\n\n// For validation - check if element has a checked checkbox/radio sibling\nexport const elementGroupCheck = name => {\n  let hasCheck = false;\n  const element = document.querySelectorAll<HTMLFormElement>(\n    `input[name=${name}]`,\n  );\n  for (let i = 0; i < element.length; i++) {\n    if (element[i].checked) {\n      hasCheck = true;\n    }\n  }\n  return !hasCheck;\n};\n"],"version":3}